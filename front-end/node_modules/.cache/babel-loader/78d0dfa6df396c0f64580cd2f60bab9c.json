{"ast":null,"code":"var _jsxFileName = \"D:\\\\__Bitcamp\\\\__crafts\\\\02_final\\\\project\\\\where-we-go\\\\front-end\\\\src\\\\components\\\\body\\\\map\\\\KakaoMap.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapContainer = styled.div`\n  width: 800px;\n  height: 400px;\n`;\n_c = MapContainer;\nconst {\n  kakao\n} = window;\n\nconst KakaoMap = ({\n  place = \"\"\n}) => {\n  _s();\n\n  useEffect(() => {\n    const infoWindow = new kakao.maps.InfoWindow({\n      zIndex: 1\n    });\n    const container = document.getElementById(\"map\");\n    const options = {\n      // center: 지도의 중심\n      center: new kakao.maps.LatLng(37.365264512305174, 127.10676860117488),\n      // level: 확대/축소 정도\n      level: 3\n    };\n    const map = new kakao.maps.Map(container, options);\n    const places = new kakao.maps.services.Places();\n    places.keywordSearch(place);\n\n    const searchCallBack = (data, status, pagination) => {\n      if (status === kakao.maps.serviesc.Status.OK) {\n        let bounds = new kakao.maps.LatLngBounds();\n\n        for (let i = 0; i < data.length; i++) {\n          displayMarker(data[i]);\n          bounds.extend(new kakao.maps.LatLng(data[i].y, daata[i].x));\n        }\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    id: \"map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n};\n\n_s(KakaoMap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = KakaoMap;\nexport default KakaoMap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapContainer\");\n$RefreshReg$(_c2, \"KakaoMap\");","map":{"version":3,"sources":["D:/__Bitcamp/__crafts/02_final/project/where-we-go/front-end/src/components/body/map/KakaoMap.jsx"],"names":["React","useEffect","styled","MapContainer","div","kakao","window","KakaoMap","place","infoWindow","maps","InfoWindow","zIndex","container","document","getElementById","options","center","LatLng","level","map","Map","places","services","Places","keywordSearch","searchCallBack","data","status","pagination","serviesc","Status","OK","bounds","LatLngBounds","i","length","displayMarker","extend","y","daata","x"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,YAAY,GAAGD,MAAM,CAACE,GAAI;AAChC;AACA;AACA,CAHA;KAAMD,Y;AAKN,MAAM;AAAEE,EAAAA;AAAF,IAAYC,MAAlB;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG;AAAV,CAAD,KAAoB;AAAA;;AACnCP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,UAAU,GAAG,IAAIJ,KAAK,CAACK,IAAN,CAAWC,UAAf,CAA0B;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAA1B,CAAnB;AACA,UAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAlB;AACA,UAAMC,OAAO,GAAG;AACd;AACAC,MAAAA,MAAM,EAAE,IAAIZ,KAAK,CAACK,IAAN,CAAWQ,MAAf,CAAsB,kBAAtB,EAA0C,kBAA1C,CAFM;AAGd;AACAC,MAAAA,KAAK,EAAE;AAJO,KAAhB;AAMA,UAAMC,GAAG,GAAG,IAAIf,KAAK,CAACK,IAAN,CAAWW,GAAf,CAAmBR,SAAnB,EAA8BG,OAA9B,CAAZ;AACA,UAAMM,MAAM,GAAG,IAAIjB,KAAK,CAACK,IAAN,CAAWa,QAAX,CAAoBC,MAAxB,EAAf;AACAF,IAAAA,MAAM,CAACG,aAAP,CAAqBjB,KAArB;;AAEA,UAAMkB,cAAc,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeC,UAAf,KAA8B;AACnD,UAAID,MAAM,KAAKvB,KAAK,CAACK,IAAN,CAAWoB,QAAX,CAAoBC,MAApB,CAA2BC,EAA1C,EAA8C;AAC5C,YAAIC,MAAM,GAAG,IAAI5B,KAAK,CAACK,IAAN,CAAWwB,YAAf,EAAb;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,IAAI,CAACS,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpCE,UAAAA,aAAa,CAACV,IAAI,CAACQ,CAAD,CAAL,CAAb;AACAF,UAAAA,MAAM,CAACK,MAAP,CAAc,IAAIjC,KAAK,CAACK,IAAN,CAAWQ,MAAf,CAAsBS,IAAI,CAACQ,CAAD,CAAJ,CAAQI,CAA9B,EAAiCC,KAAK,CAACL,CAAD,CAAL,CAASM,CAA1C,CAAd;AACD;AACF;AACF,KARD;AASD,GAtBQ,EAsBN,EAtBM,CAAT;AAwBA,sBAAO,QAAC,YAAD;AAAc,IAAA,EAAE,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA1BD;;GAAMlC,Q;;MAAAA,Q;AA4BN,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MapContainer = styled.div`\r\n  width: 800px;\r\n  height: 400px;\r\n`;\r\n\r\nconst { kakao } = window;\r\nconst KakaoMap = ({ place = \"\" }) => {\r\n  useEffect(() => {\r\n    const infoWindow = new kakao.maps.InfoWindow({ zIndex: 1 });\r\n    const container = document.getElementById(\"map\");\r\n    const options = {\r\n      // center: 지도의 중심\r\n      center: new kakao.maps.LatLng(37.365264512305174, 127.10676860117488),\r\n      // level: 확대/축소 정도\r\n      level: 3,\r\n    };\r\n    const map = new kakao.maps.Map(container, options);\r\n    const places = new kakao.maps.services.Places();\r\n    places.keywordSearch(place);\r\n\r\n    const searchCallBack = (data, status, pagination) => {\r\n      if (status === kakao.maps.serviesc.Status.OK) {\r\n        let bounds = new kakao.maps.LatLngBounds();\r\n        for (let i = 0; i < data.length; i++) {\r\n          displayMarker(data[i]);\r\n          bounds.extend(new kakao.maps.LatLng(data[i].y, daata[i].x));\r\n        }\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return <MapContainer id=\"map\"></MapContainer>;\r\n};\r\n\r\nexport default KakaoMap;\r\n"]},"metadata":{},"sourceType":"module"}