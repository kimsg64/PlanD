{"ast":null,"code":"var _jsxFileName = \"D:\\\\__Bitcamp\\\\__crafts\\\\02_final\\\\project\\\\1020 real ~\\\\PlanD\\\\front-end\\\\src\\\\components\\\\body\\\\mixin\\\\SearchMic.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSpeechRecognition } from \"react-speech-kit\";\nimport { Button } from \"./Mixin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchMicWrap = styled(Button)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  top: -106px;\n  left: 332px;\n  &:hover {\n    cursor: pointer;\n  }\n  &:active {\n    background-color: var(--color-light-green);\n  }\n`;\n_c = SearchMicWrap;\nconst ToolTipBox = styled.div`\n  display: ${props => props.display};\n  position: absolute;\n  background-color: var(--color-focus);\n  width: 100px;\n  line-height: var(--font-size-large);\n  top: -32px;\n  left: -36px;\n`;\n_c2 = ToolTipBox;\nconst ToolTip = styled.div`\n  position: absolute;\n  display: ${props => props.display};\n  border-style: solid;\n  border-width: 8px 8px 0;\n  border-color: var(--color-focus) transparent;\n  width: 0;\n  bottom: -6px;\n  left: 40px;\n`;\n_c3 = ToolTip;\n\nconst SearchMic = ({\n  setKeyword = () => {},\n  setIsListening = () => {}\n}) => {\n  _s();\n\n  const {\n    listen,\n    listening,\n    stop\n  } = useSpeechRecognition({\n    onResult: result => {\n      setKeyword(result);\n    }\n  });\n  useEffect(() => {\n    listening ? setIsListening(true) : setIsListening(false);\n  }, [listening]);\n  return /*#__PURE__*/_jsxDEV(SearchMicWrap, {\n    className: \"globalIconBtn\",\n    onMouseDown: listen,\n    onMouseUp: stop,\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-microphone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToolTipBox, {\n      display: listening ? \"block\" : \"none\",\n      children: [listening ? \"음성 인식 중\" : null, /*#__PURE__*/_jsxDEV(ToolTip, {\n        display: listening ? \"block\" : \"none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchMic, \"TPb3Af47+wZnJuZZKPVGdDaLybE=\", false, function () {\n  return [useSpeechRecognition];\n});\n\n_c4 = SearchMic;\nexport default SearchMic;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SearchMicWrap\");\n$RefreshReg$(_c2, \"ToolTipBox\");\n$RefreshReg$(_c3, \"ToolTip\");\n$RefreshReg$(_c4, \"SearchMic\");","map":{"version":3,"sources":["D:/__Bitcamp/__crafts/02_final/project/1020 real ~/PlanD/front-end/src/components/body/mixin/SearchMic.jsx"],"names":["React","useEffect","styled","useSpeechRecognition","Button","SearchMicWrap","ToolTipBox","div","props","display","ToolTip","SearchMic","setKeyword","setIsListening","listen","listening","stop","onResult","result"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,SAASC,MAAT,QAAuB,SAAvB;;AAEA,MAAMC,aAAa,GAAGH,MAAM,CAACE,MAAD,CAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;KAAMC,a;AAcN,MAAMC,UAAU,GAAGJ,MAAM,CAACK,GAAI;AAC9B,aAAcC,KAAD,IAAWA,KAAK,CAACC,OAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMH,U;AAUN,MAAMI,OAAO,GAAGR,MAAM,CAACK,GAAI;AAC3B;AACA,aAAcC,KAAD,IAAWA,KAAK,CAACC,OAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMC,O;;AAWN,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,UAAU,GAAG,MAAM,CAAE,CAAvB;AAAyBC,EAAAA,cAAc,GAAG,MAAM,CAAE;AAAlD,CAAD,KAA0D;AAAA;;AAC1E,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA;AAArB,MAA8Bb,oBAAoB,CAAC;AACvDc,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AACpBN,MAAAA,UAAU,CAACM,MAAD,CAAV;AACD;AAHsD,GAAD,CAAxD;AAKAjB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,SAAS,GAAGF,cAAc,CAAC,IAAD,CAAjB,GAA0BA,cAAc,CAAC,KAAD,CAAjD;AACD,GAFQ,EAEN,CAACE,SAAD,CAFM,CAAT;AAIA,sBACE,QAAC,aAAD;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,WAAW,EAAED,MAFf;AAGE,IAAA,SAAS,EAAEE,IAHb;AAAA,4BAKE;AAAG,MAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,UAAD;AAAY,MAAA,OAAO,EAAED,SAAS,GAAG,OAAH,GAAa,MAA3C;AAAA,iBACGA,SAAS,GAAG,SAAH,GAAe,IAD3B,eAEE,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEA,SAAS,GAAG,OAAH,GAAa;AAAxC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAvBD;;GAAMJ,S;UACgCR,oB;;;MADhCQ,S;AAyBN,eAAeA,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSpeechRecognition } from \"react-speech-kit\";\r\nimport { Button } from \"./Mixin\";\r\n\r\nconst SearchMicWrap = styled(Button)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  top: -106px;\r\n  left: 332px;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n  &:active {\r\n    background-color: var(--color-light-green);\r\n  }\r\n`;\r\nconst ToolTipBox = styled.div`\r\n  display: ${(props) => props.display};\r\n  position: absolute;\r\n  background-color: var(--color-focus);\r\n  width: 100px;\r\n  line-height: var(--font-size-large);\r\n  top: -32px;\r\n  left: -36px;\r\n`;\r\n\r\nconst ToolTip = styled.div`\r\n  position: absolute;\r\n  display: ${(props) => props.display};\r\n  border-style: solid;\r\n  border-width: 8px 8px 0;\r\n  border-color: var(--color-focus) transparent;\r\n  width: 0;\r\n  bottom: -6px;\r\n  left: 40px;\r\n`;\r\n\r\nconst SearchMic = ({ setKeyword = () => {}, setIsListening = () => {} }) => {\r\n  const { listen, listening, stop } = useSpeechRecognition({\r\n    onResult: (result) => {\r\n      setKeyword(result);\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    listening ? setIsListening(true) : setIsListening(false);\r\n  }, [listening]);\r\n\r\n  return (\r\n    <SearchMicWrap\r\n      className=\"globalIconBtn\"\r\n      onMouseDown={listen}\r\n      onMouseUp={stop}\r\n    >\r\n      <i className=\"fas fa-microphone\"></i>\r\n      <ToolTipBox display={listening ? \"block\" : \"none\"}>\r\n        {listening ? \"음성 인식 중\" : null}\r\n        <ToolTip display={listening ? \"block\" : \"none\"} />\r\n      </ToolTipBox>\r\n    </SearchMicWrap>\r\n  );\r\n};\r\n\r\nexport default SearchMic;\r\n"]},"metadata":{},"sourceType":"module"}