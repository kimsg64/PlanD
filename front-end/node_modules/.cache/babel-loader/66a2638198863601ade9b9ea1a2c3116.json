{"ast":null,"code":"var _jsxFileName = \"D:\\\\__Bitcamp\\\\__crafts\\\\02_final\\\\project\\\\1009~\\\\PlanD\\\\front-end\\\\src\\\\components\\\\body\\\\map\\\\CustomTMap.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TMapContainer = styled.div`\n  width: 800px;\n  height: 400px;\n`;\n_c = TMapContainer;\n\nconst CustomTMap = () => {\n  _s();\n\n  useEffect(() => {\n    // 지도 생성\n    var map;\n    var marker_s, marker_e, marker_p;\n    var totalMarkerArr = [];\n    var drawInfoArr = [];\n    var resultdrawArr = [];\n\n    function initTmap() {\n      // 1. 지도 띄우기\n      map = new Tmapv2.Map(\"map_div\", {\n        center: new Tmapv2.LatLng(37.570028, 126.989072),\n        width: \"100%\",\n        height: \"400px\",\n        zoom: 15,\n        zoomControl: true,\n        scrollwheel: true\n      }); // 2. 시작, 도착 심볼찍기\n      // 시작\n\n      marker_s = new Tmapv2.Marker({\n        position: new Tmapv2.LatLng(37.5668986, 126.97871544),\n        icon: \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_s.png\",\n        iconSize: new Tmapv2.Size(24, 38),\n        map: map\n      }); // 도착\n\n      marker_e = new Tmapv2.Marker({\n        position: new Tmapv2.LatLng(37.57081522, 127.00160213),\n        icon: \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_e.png\",\n        iconSize: new Tmapv2.Size(24, 38),\n        map: map\n      }); // 3. 경로탐색 API 사용요청\n\n      $.ajax({\n        method: \"POST\",\n        url: \"https://apis.openapi.sk.com/tmap/routes/pedestrian?version=1&format=json&callback=result\",\n        async: false,\n        data: {\n          appKey: \"l7xx1f2e7bf8d081449caa3ee9ffbeec5f41\",\n          startX: \"126.97871544\",\n          startY: \"37.56689860\",\n          endX: \"127.00160213\",\n          endY: \"37.57081522\",\n          reqCoordType: \"WGS84GEO\",\n          resCoordType: \"EPSG3857\",\n          startName: \"출발지\",\n          endName: \"도착지\"\n        },\n        success: function (response) {\n          var resultData = response.features; //결과 출력\n\n          var tDistance = \"총 거리 : \" + (resultData[0].properties.totalDistance / 1000).toFixed(1) + \"km,\";\n          var tTime = \" 총 시간 : \" + (resultData[0].properties.totalTime / 60).toFixed(0) + \"분\";\n          $(\"#result\").text(tDistance + tTime); //기존 그려진 라인 & 마커가 있다면 초기화\n\n          if (resultdrawArr.length > 0) {\n            for (var i in resultdrawArr) {\n              resultdrawArr[i].setMap(null);\n            }\n\n            resultdrawArr = [];\n          }\n\n          drawInfoArr = [];\n\n          for (var i in resultData) {\n            //for문 [S]\n            var geometry = resultData[i].geometry;\n            var properties = resultData[i].properties;\n            var polyline_;\n\n            if (geometry.type == \"LineString\") {\n              for (var j in geometry.coordinates) {\n                // 경로들의 결과값(구간)들을 포인트 객체로 변환\n                var latlng = new Tmapv2.Point(geometry.coordinates[j][0], geometry.coordinates[j][1]); // 포인트 객체를 받아 좌표값으로 변환\n\n                var convertPoint = new Tmapv2.Projection.convertEPSG3857ToWGS84GEO(latlng); // 포인트객체의 정보로 좌표값 변환 객체로 저장\n\n                var convertChange = new Tmapv2.LatLng(convertPoint._lat, convertPoint._lng); // 배열에 담기\n\n                drawInfoArr.push(convertChange);\n              }\n            } else {\n              var markerImg = \"\";\n              var pType = \"\";\n              var size;\n\n              if (properties.pointType == \"S\") {\n                //출발지 마커\n                markerImg = \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_s.png\";\n                pType = \"S\";\n                size = new Tmapv2.Size(24, 38);\n              } else if (properties.pointType == \"E\") {\n                //도착지 마커\n                markerImg = \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_e.png\";\n                pType = \"E\";\n                size = new Tmapv2.Size(24, 38);\n              } else {\n                //각 포인트 마커\n                markerImg = \"http://topopen.tmap.co.kr/imgs/point.png\";\n                pType = \"P\";\n                size = new Tmapv2.Size(8, 8);\n              } // 경로들의 결과값들을 포인트 객체로 변환\n\n\n              var latlon = new Tmapv2.Point(geometry.coordinates[0], geometry.coordinates[1]); // 포인트 객체를 받아 좌표값으로 다시 변환\n\n              var convertPoint = new Tmapv2.Projection.convertEPSG3857ToWGS84GEO(latlon);\n              var routeInfoObj = {\n                markerImage: markerImg,\n                lng: convertPoint._lng,\n                lat: convertPoint._lat,\n                pointType: pType\n              }; // Marker 추가\n\n              marker_p = new Tmapv2.Marker({\n                position: new Tmapv2.LatLng(routeInfoObj.lat, routeInfoObj.lng),\n                icon: routeInfoObj.markerImage,\n                iconSize: size,\n                map: map\n              });\n            }\n          } //for문 [E]\n\n\n          drawLine(drawInfoArr);\n        },\n        error: function (request, status, error) {\n          console.log(\"code:\" + request.status + \"\\n\" + \"message:\" + request.responseText + \"\\n\" + \"error:\" + error);\n        }\n      });\n    }\n\n    function addComma(num) {\n      var regexp = /\\B(?=(\\d{3})+(?!\\d))/g;\n      return num.toString().replace(regexp, \",\");\n    }\n\n    function drawLine(arrPoint) {\n      var polyline_;\n      polyline_ = new Tmapv2.Polyline({\n        path: arrPoint,\n        strokeColor: \"#DD0000\",\n        strokeWeight: 6,\n        map: map\n      });\n      resultdrawArr.push(polyline_);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map_wrap\",\n      className: \"map_wrap3\",\n      children: /*#__PURE__*/_jsxDEV(TMapContainer, {\n        id: \"TMapApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"map_act_btn_wrap clear_box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CustomTMap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = CustomTMap;\nexport default CustomTMap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TMapContainer\");\n$RefreshReg$(_c2, \"CustomTMap\");","map":{"version":3,"sources":["D:/__Bitcamp/__crafts/02_final/project/1009~/PlanD/front-end/src/components/body/map/CustomTMap.jsx"],"names":["React","useEffect","styled","TMapContainer","div","CustomTMap","map","marker_s","marker_e","marker_p","totalMarkerArr","drawInfoArr","resultdrawArr","initTmap","Tmapv2","Map","center","LatLng","width","height","zoom","zoomControl","scrollwheel","Marker","position","icon","iconSize","Size","$","ajax","method","url","async","data","appKey","startX","startY","endX","endY","reqCoordType","resCoordType","startName","endName","success","response","resultData","features","tDistance","properties","totalDistance","toFixed","tTime","totalTime","text","length","i","setMap","geometry","polyline_","type","j","coordinates","latlng","Point","convertPoint","Projection","convertEPSG3857ToWGS84GEO","convertChange","_lat","_lng","push","markerImg","pType","size","pointType","latlon","routeInfoObj","markerImage","lng","lat","drawLine","error","request","status","console","log","responseText","addComma","num","regexp","toString","replace","arrPoint","Polyline","path","strokeColor","strokeWeight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,aAAa,GAAGD,MAAM,CAACE,GAAI;AACjC;AACA;AACA,CAHA;KAAMD,a;;AAKN,MAAME,UAAU,GAAG,MAAM;AAAA;;AACvBJ,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIK,GAAJ;AACA,QAAIC,QAAJ,EAAcC,QAAd,EAAwBC,QAAxB;AACA,QAAIC,cAAc,GAAG,EAArB;AACA,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIC,aAAa,GAAG,EAApB;;AAEA,aAASC,QAAT,GAAoB;AAClB;AACAP,MAAAA,GAAG,GAAG,IAAIQ,MAAM,CAACC,GAAX,CAAe,SAAf,EAA0B;AAC9BC,QAAAA,MAAM,EAAE,IAAIF,MAAM,CAACG,MAAX,CAAkB,SAAlB,EAA6B,UAA7B,CADsB;AAE9BC,QAAAA,KAAK,EAAE,MAFuB;AAG9BC,QAAAA,MAAM,EAAE,OAHsB;AAI9BC,QAAAA,IAAI,EAAE,EAJwB;AAK9BC,QAAAA,WAAW,EAAE,IALiB;AAM9BC,QAAAA,WAAW,EAAE;AANiB,OAA1B,CAAN,CAFkB,CAWlB;AACA;;AACAf,MAAAA,QAAQ,GAAG,IAAIO,MAAM,CAACS,MAAX,CAAkB;AAC3BC,QAAAA,QAAQ,EAAE,IAAIV,MAAM,CAACG,MAAX,CAAkB,UAAlB,EAA8B,YAA9B,CADiB;AAE3BQ,QAAAA,IAAI,EAAE,+DAFqB;AAG3BC,QAAAA,QAAQ,EAAE,IAAIZ,MAAM,CAACa,IAAX,CAAgB,EAAhB,EAAoB,EAApB,CAHiB;AAI3BrB,QAAAA,GAAG,EAAEA;AAJsB,OAAlB,CAAX,CAbkB,CAoBlB;;AACAE,MAAAA,QAAQ,GAAG,IAAIM,MAAM,CAACS,MAAX,CAAkB;AAC3BC,QAAAA,QAAQ,EAAE,IAAIV,MAAM,CAACG,MAAX,CAAkB,WAAlB,EAA+B,YAA/B,CADiB;AAE3BQ,QAAAA,IAAI,EAAE,+DAFqB;AAG3BC,QAAAA,QAAQ,EAAE,IAAIZ,MAAM,CAACa,IAAX,CAAgB,EAAhB,EAAoB,EAApB,CAHiB;AAI3BrB,QAAAA,GAAG,EAAEA;AAJsB,OAAlB,CAAX,CArBkB,CA4BlB;;AACAsB,MAAAA,CAAC,CAACC,IAAF,CAAO;AACLC,QAAAA,MAAM,EAAE,MADH;AAELC,QAAAA,GAAG,EAAE,0FAFA;AAGLC,QAAAA,KAAK,EAAE,KAHF;AAILC,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAE,sCADJ;AAEJC,UAAAA,MAAM,EAAE,cAFJ;AAGJC,UAAAA,MAAM,EAAE,aAHJ;AAIJC,UAAAA,IAAI,EAAE,cAJF;AAKJC,UAAAA,IAAI,EAAE,aALF;AAMJC,UAAAA,YAAY,EAAE,UANV;AAOJC,UAAAA,YAAY,EAAE,UAPV;AAQJC,UAAAA,SAAS,EAAE,KARP;AASJC,UAAAA,OAAO,EAAE;AATL,SAJD;AAeLC,QAAAA,OAAO,EAAE,UAAUC,QAAV,EAAoB;AAC3B,cAAIC,UAAU,GAAGD,QAAQ,CAACE,QAA1B,CAD2B,CAG3B;;AACA,cAAIC,SAAS,GACX,YACA,CAACF,UAAU,CAAC,CAAD,CAAV,CAAcG,UAAd,CAAyBC,aAAzB,GAAyC,IAA1C,EAAgDC,OAAhD,CAAwD,CAAxD,CADA,GAEA,KAHF;AAIA,cAAIC,KAAK,GACP,aACA,CAACN,UAAU,CAAC,CAAD,CAAV,CAAcG,UAAd,CAAyBI,SAAzB,GAAqC,EAAtC,EAA0CF,OAA1C,CAAkD,CAAlD,CADA,GAEA,GAHF;AAKAtB,UAAAA,CAAC,CAAC,SAAD,CAAD,CAAayB,IAAb,CAAkBN,SAAS,GAAGI,KAA9B,EAb2B,CAe3B;;AACA,cAAIvC,aAAa,CAAC0C,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,iBAAK,IAAIC,CAAT,IAAc3C,aAAd,EAA6B;AAC3BA,cAAAA,aAAa,CAAC2C,CAAD,CAAb,CAAiBC,MAAjB,CAAwB,IAAxB;AACD;;AACD5C,YAAAA,aAAa,GAAG,EAAhB;AACD;;AAEDD,UAAAA,WAAW,GAAG,EAAd;;AAEA,eAAK,IAAI4C,CAAT,IAAcV,UAAd,EAA0B;AACxB;AACA,gBAAIY,QAAQ,GAAGZ,UAAU,CAACU,CAAD,CAAV,CAAcE,QAA7B;AACA,gBAAIT,UAAU,GAAGH,UAAU,CAACU,CAAD,CAAV,CAAcP,UAA/B;AACA,gBAAIU,SAAJ;;AAEA,gBAAID,QAAQ,CAACE,IAAT,IAAiB,YAArB,EAAmC;AACjC,mBAAK,IAAIC,CAAT,IAAcH,QAAQ,CAACI,WAAvB,EAAoC;AAClC;AACA,oBAAIC,MAAM,GAAG,IAAIhD,MAAM,CAACiD,KAAX,CACXN,QAAQ,CAACI,WAAT,CAAqBD,CAArB,EAAwB,CAAxB,CADW,EAEXH,QAAQ,CAACI,WAAT,CAAqBD,CAArB,EAAwB,CAAxB,CAFW,CAAb,CAFkC,CAMlC;;AACA,oBAAII,YAAY,GACd,IAAIlD,MAAM,CAACmD,UAAP,CAAkBC,yBAAtB,CAAgDJ,MAAhD,CADF,CAPkC,CASlC;;AACA,oBAAIK,aAAa,GAAG,IAAIrD,MAAM,CAACG,MAAX,CAClB+C,YAAY,CAACI,IADK,EAElBJ,YAAY,CAACK,IAFK,CAApB,CAVkC,CAclC;;AACA1D,gBAAAA,WAAW,CAAC2D,IAAZ,CAAiBH,aAAjB;AACD;AACF,aAlBD,MAkBO;AACL,kBAAII,SAAS,GAAG,EAAhB;AACA,kBAAIC,KAAK,GAAG,EAAZ;AACA,kBAAIC,IAAJ;;AAEA,kBAAIzB,UAAU,CAAC0B,SAAX,IAAwB,GAA5B,EAAiC;AAC/B;AACAH,gBAAAA,SAAS,GACP,+DADF;AAEAC,gBAAAA,KAAK,GAAG,GAAR;AACAC,gBAAAA,IAAI,GAAG,IAAI3D,MAAM,CAACa,IAAX,CAAgB,EAAhB,EAAoB,EAApB,CAAP;AACD,eAND,MAMO,IAAIqB,UAAU,CAAC0B,SAAX,IAAwB,GAA5B,EAAiC;AACtC;AACAH,gBAAAA,SAAS,GACP,+DADF;AAEAC,gBAAAA,KAAK,GAAG,GAAR;AACAC,gBAAAA,IAAI,GAAG,IAAI3D,MAAM,CAACa,IAAX,CAAgB,EAAhB,EAAoB,EAApB,CAAP;AACD,eANM,MAMA;AACL;AACA4C,gBAAAA,SAAS,GAAG,0CAAZ;AACAC,gBAAAA,KAAK,GAAG,GAAR;AACAC,gBAAAA,IAAI,GAAG,IAAI3D,MAAM,CAACa,IAAX,CAAgB,CAAhB,EAAmB,CAAnB,CAAP;AACD,eAtBI,CAwBL;;;AACA,kBAAIgD,MAAM,GAAG,IAAI7D,MAAM,CAACiD,KAAX,CACXN,QAAQ,CAACI,WAAT,CAAqB,CAArB,CADW,EAEXJ,QAAQ,CAACI,WAAT,CAAqB,CAArB,CAFW,CAAb,CAzBK,CA8BL;;AACA,kBAAIG,YAAY,GACd,IAAIlD,MAAM,CAACmD,UAAP,CAAkBC,yBAAtB,CAAgDS,MAAhD,CADF;AAGA,kBAAIC,YAAY,GAAG;AACjBC,gBAAAA,WAAW,EAAEN,SADI;AAEjBO,gBAAAA,GAAG,EAAEd,YAAY,CAACK,IAFD;AAGjBU,gBAAAA,GAAG,EAAEf,YAAY,CAACI,IAHD;AAIjBM,gBAAAA,SAAS,EAAEF;AAJM,eAAnB,CAlCK,CAyCL;;AACA/D,cAAAA,QAAQ,GAAG,IAAIK,MAAM,CAACS,MAAX,CAAkB;AAC3BC,gBAAAA,QAAQ,EAAE,IAAIV,MAAM,CAACG,MAAX,CAAkB2D,YAAY,CAACG,GAA/B,EAAoCH,YAAY,CAACE,GAAjD,CADiB;AAE3BrD,gBAAAA,IAAI,EAAEmD,YAAY,CAACC,WAFQ;AAG3BnD,gBAAAA,QAAQ,EAAE+C,IAHiB;AAI3BnE,gBAAAA,GAAG,EAAEA;AAJsB,eAAlB,CAAX;AAMD;AACF,WAlG0B,CAkGzB;;;AACF0E,UAAAA,QAAQ,CAACrE,WAAD,CAAR;AACD,SAnHI;AAoHLsE,QAAAA,KAAK,EAAE,UAAUC,OAAV,EAAmBC,MAAnB,EAA2BF,KAA3B,EAAkC;AACvCG,UAAAA,OAAO,CAACC,GAAR,CACE,UACEH,OAAO,CAACC,MADV,GAEE,IAFF,GAGE,UAHF,GAIED,OAAO,CAACI,YAJV,GAKE,IALF,GAME,QANF,GAOEL,KARJ;AAUD;AA/HI,OAAP;AAiID;;AAED,aAASM,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,UAAIC,MAAM,GAAG,uBAAb;AACA,aAAOD,GAAG,CAACE,QAAJ,GAAeC,OAAf,CAAuBF,MAAvB,EAA+B,GAA/B,CAAP;AACD;;AAED,aAAST,QAAT,CAAkBY,QAAlB,EAA4B;AAC1B,UAAIlC,SAAJ;AAEAA,MAAAA,SAAS,GAAG,IAAI5C,MAAM,CAAC+E,QAAX,CAAoB;AAC9BC,QAAAA,IAAI,EAAEF,QADwB;AAE9BG,QAAAA,WAAW,EAAE,SAFiB;AAG9BC,QAAAA,YAAY,EAAE,CAHgB;AAI9B1F,QAAAA,GAAG,EAAEA;AAJyB,OAApB,CAAZ;AAMAM,MAAAA,aAAa,CAAC0D,IAAd,CAAmBZ,SAAnB;AACD;AACF,GAxLQ,EAwLN,EAxLM,CAAT;AA0LA,sBACE;AAAA,4BACE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAmB,MAAA,SAAS,EAAC,WAA7B;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,EAAE,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAG,MAAA,EAAE,EAAC;AAAN;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD,CApMD;;GAAMrD,U;;MAAAA,U;AAsMN,eAAeA,UAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TMapContainer = styled.div`\r\n  width: 800px;\r\n  height: 400px;\r\n`;\r\n\r\nconst CustomTMap = () => {\r\n  useEffect(() => {\r\n    // 지도 생성\r\n    var map;\r\n    var marker_s, marker_e, marker_p;\r\n    var totalMarkerArr = [];\r\n    var drawInfoArr = [];\r\n    var resultdrawArr = [];\r\n\r\n    function initTmap() {\r\n      // 1. 지도 띄우기\r\n      map = new Tmapv2.Map(\"map_div\", {\r\n        center: new Tmapv2.LatLng(37.570028, 126.989072),\r\n        width: \"100%\",\r\n        height: \"400px\",\r\n        zoom: 15,\r\n        zoomControl: true,\r\n        scrollwheel: true,\r\n      });\r\n\r\n      // 2. 시작, 도착 심볼찍기\r\n      // 시작\r\n      marker_s = new Tmapv2.Marker({\r\n        position: new Tmapv2.LatLng(37.5668986, 126.97871544),\r\n        icon: \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_s.png\",\r\n        iconSize: new Tmapv2.Size(24, 38),\r\n        map: map,\r\n      });\r\n\r\n      // 도착\r\n      marker_e = new Tmapv2.Marker({\r\n        position: new Tmapv2.LatLng(37.57081522, 127.00160213),\r\n        icon: \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_e.png\",\r\n        iconSize: new Tmapv2.Size(24, 38),\r\n        map: map,\r\n      });\r\n\r\n      // 3. 경로탐색 API 사용요청\r\n      $.ajax({\r\n        method: \"POST\",\r\n        url: \"https://apis.openapi.sk.com/tmap/routes/pedestrian?version=1&format=json&callback=result\",\r\n        async: false,\r\n        data: {\r\n          appKey: \"l7xx1f2e7bf8d081449caa3ee9ffbeec5f41\",\r\n          startX: \"126.97871544\",\r\n          startY: \"37.56689860\",\r\n          endX: \"127.00160213\",\r\n          endY: \"37.57081522\",\r\n          reqCoordType: \"WGS84GEO\",\r\n          resCoordType: \"EPSG3857\",\r\n          startName: \"출발지\",\r\n          endName: \"도착지\",\r\n        },\r\n        success: function (response) {\r\n          var resultData = response.features;\r\n\r\n          //결과 출력\r\n          var tDistance =\r\n            \"총 거리 : \" +\r\n            (resultData[0].properties.totalDistance / 1000).toFixed(1) +\r\n            \"km,\";\r\n          var tTime =\r\n            \" 총 시간 : \" +\r\n            (resultData[0].properties.totalTime / 60).toFixed(0) +\r\n            \"분\";\r\n\r\n          $(\"#result\").text(tDistance + tTime);\r\n\r\n          //기존 그려진 라인 & 마커가 있다면 초기화\r\n          if (resultdrawArr.length > 0) {\r\n            for (var i in resultdrawArr) {\r\n              resultdrawArr[i].setMap(null);\r\n            }\r\n            resultdrawArr = [];\r\n          }\r\n\r\n          drawInfoArr = [];\r\n\r\n          for (var i in resultData) {\r\n            //for문 [S]\r\n            var geometry = resultData[i].geometry;\r\n            var properties = resultData[i].properties;\r\n            var polyline_;\r\n\r\n            if (geometry.type == \"LineString\") {\r\n              for (var j in geometry.coordinates) {\r\n                // 경로들의 결과값(구간)들을 포인트 객체로 변환\r\n                var latlng = new Tmapv2.Point(\r\n                  geometry.coordinates[j][0],\r\n                  geometry.coordinates[j][1]\r\n                );\r\n                // 포인트 객체를 받아 좌표값으로 변환\r\n                var convertPoint =\r\n                  new Tmapv2.Projection.convertEPSG3857ToWGS84GEO(latlng);\r\n                // 포인트객체의 정보로 좌표값 변환 객체로 저장\r\n                var convertChange = new Tmapv2.LatLng(\r\n                  convertPoint._lat,\r\n                  convertPoint._lng\r\n                );\r\n                // 배열에 담기\r\n                drawInfoArr.push(convertChange);\r\n              }\r\n            } else {\r\n              var markerImg = \"\";\r\n              var pType = \"\";\r\n              var size;\r\n\r\n              if (properties.pointType == \"S\") {\r\n                //출발지 마커\r\n                markerImg =\r\n                  \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_s.png\";\r\n                pType = \"S\";\r\n                size = new Tmapv2.Size(24, 38);\r\n              } else if (properties.pointType == \"E\") {\r\n                //도착지 마커\r\n                markerImg =\r\n                  \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_e.png\";\r\n                pType = \"E\";\r\n                size = new Tmapv2.Size(24, 38);\r\n              } else {\r\n                //각 포인트 마커\r\n                markerImg = \"http://topopen.tmap.co.kr/imgs/point.png\";\r\n                pType = \"P\";\r\n                size = new Tmapv2.Size(8, 8);\r\n              }\r\n\r\n              // 경로들의 결과값들을 포인트 객체로 변환\r\n              var latlon = new Tmapv2.Point(\r\n                geometry.coordinates[0],\r\n                geometry.coordinates[1]\r\n              );\r\n\r\n              // 포인트 객체를 받아 좌표값으로 다시 변환\r\n              var convertPoint =\r\n                new Tmapv2.Projection.convertEPSG3857ToWGS84GEO(latlon);\r\n\r\n              var routeInfoObj = {\r\n                markerImage: markerImg,\r\n                lng: convertPoint._lng,\r\n                lat: convertPoint._lat,\r\n                pointType: pType,\r\n              };\r\n\r\n              // Marker 추가\r\n              marker_p = new Tmapv2.Marker({\r\n                position: new Tmapv2.LatLng(routeInfoObj.lat, routeInfoObj.lng),\r\n                icon: routeInfoObj.markerImage,\r\n                iconSize: size,\r\n                map: map,\r\n              });\r\n            }\r\n          } //for문 [E]\r\n          drawLine(drawInfoArr);\r\n        },\r\n        error: function (request, status, error) {\r\n          console.log(\r\n            \"code:\" +\r\n              request.status +\r\n              \"\\n\" +\r\n              \"message:\" +\r\n              request.responseText +\r\n              \"\\n\" +\r\n              \"error:\" +\r\n              error\r\n          );\r\n        },\r\n      });\r\n    }\r\n\r\n    function addComma(num) {\r\n      var regexp = /\\B(?=(\\d{3})+(?!\\d))/g;\r\n      return num.toString().replace(regexp, \",\");\r\n    }\r\n\r\n    function drawLine(arrPoint) {\r\n      var polyline_;\r\n\r\n      polyline_ = new Tmapv2.Polyline({\r\n        path: arrPoint,\r\n        strokeColor: \"#DD0000\",\r\n        strokeWeight: 6,\r\n        map: map,\r\n      });\r\n      resultdrawArr.push(polyline_);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div id=\"map_wrap\" className=\"map_wrap3\">\r\n        <TMapContainer id=\"TMapApp\"></TMapContainer>\r\n      </div>\r\n      <div class=\"map_act_btn_wrap clear_box\"></div>\r\n      <p id=\"result\"></p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomTMap;\r\n"]},"metadata":{},"sourceType":"module"}