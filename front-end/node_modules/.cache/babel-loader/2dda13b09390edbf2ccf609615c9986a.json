{"ast":null,"code":"var _jsxFileName = \"D:\\\\__Bitcamp\\\\__crafts\\\\02_final\\\\project\\\\1009~\\\\PlanD\\\\front-end\\\\src\\\\components\\\\body\\\\map\\\\GoogleMapSettings.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport CustomGoogleMap from \"./CustomGoogleMap\";\nimport Geocode from \"react-geocode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GoogleMapSettings = ({\n  address1 = \"\",\n  address2 = \"\",\n  address3 = \"\"\n}) => {\n  _s();\n\n  // 리버스 Geocode (주소로 좌표 구하기)\n  // 좌표를 담을 배열(기본 빈 배열)\n  const [places, setPlaces] = useState([]); // 기본 설정(key, 언어, 장소)\n\n  Geocode.setApiKey(process.env.REACT_APP_MY_KEY);\n  Geocode.setLanguage(\"ko\");\n  Geocode.setRegion(\"ko\"); // 주소로 좌표 구하기\n\n  const getLatLng = address => {\n    Geocode.fromAddress(address).then(response => {\n      const {\n        lat,\n        lng\n      } = response.results[0].geometry.location;\n      console.log(lat, lng);\n      setPlaces(prevPlaces => [...prevPlaces, {\n        x: lat,\n        y: lng\n      }]);\n    }, error => {\n      console.log(error);\n    });\n  };\n\n  getLatLng(addrs[0]);\n  getLatLng(addrs[1]);\n  getLatLng(addrs[2]);\n  console.log(places); // 장소1, 2, 3의 위도, 경도값('순서' 필드 참조)\n\n  const latlngs = [{\n    lat: 33.499648,\n    lng: 126.531275\n  }, {\n    lat: 33.2553,\n    lng: 126.560114\n  }, {\n    lat: 37.34859,\n    lng: 126.958301\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CustomGoogleMap // startPoint={{ lat: places[0].lat, lng: places[0].lng }}\n    // endPoint={{ lat: places[1].lat, lng: places[1].lng }}\n    , {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GoogleMapSettings, \"CEQVXr2IjoQ3A0PERN12D+A9LME=\");\n\n_c = GoogleMapSettings;\nexport default GoogleMapSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleMapSettings\");","map":{"version":3,"sources":["D:/__Bitcamp/__crafts/02_final/project/1009~/PlanD/front-end/src/components/body/map/GoogleMapSettings.jsx"],"names":["React","useState","CustomGoogleMap","Geocode","GoogleMapSettings","address1","address2","address3","places","setPlaces","setApiKey","process","env","REACT_APP_MY_KEY","setLanguage","setRegion","getLatLng","address","fromAddress","then","response","lat","lng","results","geometry","location","console","log","prevPlaces","x","y","error","addrs","latlngs"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,OAAP,MAAoB,eAApB;;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,QAAQ,GAAG,EAAb;AAAiBC,EAAAA,QAAQ,GAAG,EAA5B;AAAgCC,EAAAA,QAAQ,GAAG;AAA3C,CAAD,KAAqD;AAAA;;AAC7E;AACA;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC,CAH6E,CAI7E;;AACAE,EAAAA,OAAO,CAACO,SAAR,CAAkBC,OAAO,CAACC,GAAR,CAAYC,gBAA9B;AACAV,EAAAA,OAAO,CAACW,WAAR,CAAoB,IAApB;AACAX,EAAAA,OAAO,CAACY,SAAR,CAAkB,IAAlB,EAP6E,CAQ7E;;AACA,QAAMC,SAAS,GAAIC,OAAD,IAAa;AAC7Bd,IAAAA,OAAO,CAACe,WAAR,CAAoBD,OAApB,EAA6BE,IAA7B,CACGC,QAAD,IAAc;AACZ,YAAM;AAAEC,QAAAA,GAAF;AAAOC,QAAAA;AAAP,UAAeF,QAAQ,CAACG,OAAT,CAAiB,CAAjB,EAAoBC,QAApB,CAA6BC,QAAlD;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ,EAAiBC,GAAjB;AACAb,MAAAA,SAAS,CAAEmB,UAAD,IAAgB,CAAC,GAAGA,UAAJ,EAAgB;AAAEC,QAAAA,CAAC,EAAER,GAAL;AAAUS,QAAAA,CAAC,EAAER;AAAb,OAAhB,CAAjB,CAAT;AACD,KALH,EAMGS,KAAD,IAAW;AACTL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,KARH;AAUD,GAXD;;AAYAf,EAAAA,SAAS,CAACgB,KAAK,CAAC,CAAD,CAAN,CAAT;AACAhB,EAAAA,SAAS,CAACgB,KAAK,CAAC,CAAD,CAAN,CAAT;AACAhB,EAAAA,SAAS,CAACgB,KAAK,CAAC,CAAD,CAAN,CAAT;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYnB,MAAZ,EAxB6E,CA0B7E;;AACA,QAAMyB,OAAO,GAAG,CACd;AAAEZ,IAAAA,GAAG,EAAE,SAAP;AAAkBC,IAAAA,GAAG,EAAE;AAAvB,GADc,EAEd;AAAED,IAAAA,GAAG,EAAE,OAAP;AAAgBC,IAAAA,GAAG,EAAE;AAArB,GAFc,EAGd;AAAED,IAAAA,GAAG,EAAE,QAAP;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GAHc,CAAhB;AAMA,sBACE;AAAA,2BACE,QAAC,eAAD,CACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAzCD;;GAAMlB,iB;;KAAAA,iB;AA2CN,eAAeA,iBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport CustomGoogleMap from \"./CustomGoogleMap\";\r\nimport Geocode from \"react-geocode\";\r\n\r\nconst GoogleMapSettings = ({ address1 = \"\", address2 = \"\", address3 = \"\" }) => {\r\n  // 리버스 Geocode (주소로 좌표 구하기)\r\n  // 좌표를 담을 배열(기본 빈 배열)\r\n  const [places, setPlaces] = useState([]);\r\n  // 기본 설정(key, 언어, 장소)\r\n  Geocode.setApiKey(process.env.REACT_APP_MY_KEY);\r\n  Geocode.setLanguage(\"ko\");\r\n  Geocode.setRegion(\"ko\");\r\n  // 주소로 좌표 구하기\r\n  const getLatLng = (address) => {\r\n    Geocode.fromAddress(address).then(\r\n      (response) => {\r\n        const { lat, lng } = response.results[0].geometry.location;\r\n        console.log(lat, lng);\r\n        setPlaces((prevPlaces) => [...prevPlaces, { x: lat, y: lng }]);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n  getLatLng(addrs[0]);\r\n  getLatLng(addrs[1]);\r\n  getLatLng(addrs[2]);\r\n  console.log(places);\r\n\r\n  // 장소1, 2, 3의 위도, 경도값('순서' 필드 참조)\r\n  const latlngs = [\r\n    { lat: 33.499648, lng: 126.531275 },\r\n    { lat: 33.2553, lng: 126.560114 },\r\n    { lat: 37.34859, lng: 126.958301 },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <CustomGoogleMap\r\n      // startPoint={{ lat: places[0].lat, lng: places[0].lng }}\r\n      // endPoint={{ lat: places[1].lat, lng: places[1].lng }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleMapSettings;\r\n"]},"metadata":{},"sourceType":"module"}