{"ast":null,"code":"var _jsxFileName = \"D:\\\\__Bitcamp\\\\__crafts\\\\02_final\\\\project\\\\where-we-go\\\\front-end\\\\src\\\\components\\\\body\\\\map\\\\KakaoMap.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapContainer = styled.div`\n  width: 800px;\n  height: 400px;\n`;\n_c = MapContainer;\nconst {\n  kakao\n} = window;\n\nconst KakaoMap = ({\n  place = \"\"\n}) => {\n  _s();\n\n  useEffect(() => {\n    const container = document.getElementById(\"map\");\n    const options = {\n      // center: 지도의 중심\n      center: new kakao.maps.LatLng(37.365264512305174, 127.10676860117488),\n      // level: 확대/축소 정도\n      level: 3\n    };\n    const map = new kakao.maps.Map(container, options);\n    let markers = []; // 장소 검색기\n\n    const places = new kakao.maps.services.Places(); // 클릭시 표시될 인포윈도우\n\n    const infoWindow = new kakao.maps.InfoWindow({\n      zIndex: 1\n    });\n    searchPlaces();\n\n    const searchPlaces = () => {\n      if (!place.replace(/^\\s+|\\s+$/g, \"\")) {\n        alert(\"키워드 입력하시죠\");\n        return false;\n      }\n\n      places.keywordSearch(place, completeSearching);\n    };\n\n    const completeSearching = (data, status, pagination) => {\n      if (status === kakao.maps.services.Status.OK) {\n        displayPlaces(data);\n        displayPagination(pagination);\n      } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\n        alert(\"검색결과가 없어용...\");\n        return;\n      } else if (status === kakao.maps.services.Status.ERROR) {\n        alert(\"오류가 생겼어용...\");\n        return;\n      }\n    };\n  }, [place]);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    id: \"map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n};\n\n_s(KakaoMap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = KakaoMap;\nexport default KakaoMap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapContainer\");\n$RefreshReg$(_c2, \"KakaoMap\");","map":{"version":3,"sources":["D:/__Bitcamp/__crafts/02_final/project/where-we-go/front-end/src/components/body/map/KakaoMap.jsx"],"names":["React","useEffect","styled","MapContainer","div","kakao","window","KakaoMap","place","container","document","getElementById","options","center","maps","LatLng","level","map","Map","markers","places","services","Places","infoWindow","InfoWindow","zIndex","searchPlaces","replace","alert","keywordSearch","completeSearching","data","status","pagination","Status","OK","displayPlaces","displayPagination","ZERO_RESULT","ERROR"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,YAAY,GAAGD,MAAM,CAACE,GAAI;AAChC;AACA;AACA,CAHA;KAAMD,Y;AAKN,MAAM;AAAEE,EAAAA;AAAF,IAAYC,MAAlB;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG;AAAV,CAAD,KAAoB;AAAA;;AACnCP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAlB;AACA,UAAMC,OAAO,GAAG;AACd;AACAC,MAAAA,MAAM,EAAE,IAAIR,KAAK,CAACS,IAAN,CAAWC,MAAf,CAAsB,kBAAtB,EAA0C,kBAA1C,CAFM;AAGd;AACAC,MAAAA,KAAK,EAAE;AAJO,KAAhB;AAMA,UAAMC,GAAG,GAAG,IAAIZ,KAAK,CAACS,IAAN,CAAWI,GAAf,CAAmBT,SAAnB,EAA8BG,OAA9B,CAAZ;AACA,QAAIO,OAAO,GAAG,EAAd,CATc,CAUd;;AACA,UAAMC,MAAM,GAAG,IAAIf,KAAK,CAACS,IAAN,CAAWO,QAAX,CAAoBC,MAAxB,EAAf,CAXc,CAYd;;AACA,UAAMC,UAAU,GAAG,IAAIlB,KAAK,CAACS,IAAN,CAAWU,UAAf,CAA0B;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAA1B,CAAnB;AAEAC,IAAAA,YAAY;;AACZ,UAAMA,YAAY,GAAG,MAAM;AACzB,UAAI,CAAClB,KAAK,CAACmB,OAAN,CAAc,YAAd,EAA4B,EAA5B,CAAL,EAAsC;AACpCC,QAAAA,KAAK,CAAC,WAAD,CAAL;AACA,eAAO,KAAP;AACD;;AACDR,MAAAA,MAAM,CAACS,aAAP,CAAqBrB,KAArB,EAA4BsB,iBAA5B;AACD,KAND;;AAQA,UAAMA,iBAAiB,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeC,UAAf,KAA8B;AACtD,UAAID,MAAM,KAAK3B,KAAK,CAACS,IAAN,CAAWO,QAAX,CAAoBa,MAApB,CAA2BC,EAA1C,EAA8C;AAC5CC,QAAAA,aAAa,CAACL,IAAD,CAAb;AACAM,QAAAA,iBAAiB,CAACJ,UAAD,CAAjB;AACD,OAHD,MAGO,IAAID,MAAM,KAAK3B,KAAK,CAACS,IAAN,CAAWO,QAAX,CAAoBa,MAApB,CAA2BI,WAA1C,EAAuD;AAC5DV,QAAAA,KAAK,CAAC,cAAD,CAAL;AACA;AACD,OAHM,MAGA,IAAII,MAAM,KAAK3B,KAAK,CAACS,IAAN,CAAWO,QAAX,CAAoBa,MAApB,CAA2BK,KAA1C,EAAiD;AACtDX,QAAAA,KAAK,CAAC,aAAD,CAAL;AACA;AACD;AACF,KAXD;AAYD,GApCQ,EAoCN,CAACpB,KAAD,CApCM,CAAT;AAsCA,sBAAO,QAAC,YAAD;AAAc,IAAA,EAAE,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAxCD;;GAAMD,Q;;MAAAA,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MapContainer = styled.div`\r\n  width: 800px;\r\n  height: 400px;\r\n`;\r\n\r\nconst { kakao } = window;\r\nconst KakaoMap = ({ place = \"\" }) => {\r\n  useEffect(() => {\r\n    const container = document.getElementById(\"map\");\r\n    const options = {\r\n      // center: 지도의 중심\r\n      center: new kakao.maps.LatLng(37.365264512305174, 127.10676860117488),\r\n      // level: 확대/축소 정도\r\n      level: 3,\r\n    };\r\n    const map = new kakao.maps.Map(container, options);\r\n    let markers = [];\r\n    // 장소 검색기\r\n    const places = new kakao.maps.services.Places();\r\n    // 클릭시 표시될 인포윈도우\r\n    const infoWindow = new kakao.maps.InfoWindow({ zIndex: 1 });\r\n\r\n    searchPlaces();\r\n    const searchPlaces = () => {\r\n      if (!place.replace(/^\\s+|\\s+$/g, \"\")) {\r\n        alert(\"키워드 입력하시죠\");\r\n        return false;\r\n      }\r\n      places.keywordSearch(place, completeSearching);\r\n    };\r\n\r\n    const completeSearching = (data, status, pagination) => {\r\n      if (status === kakao.maps.services.Status.OK) {\r\n        displayPlaces(data);\r\n        displayPagination(pagination);\r\n      } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\r\n        alert(\"검색결과가 없어용...\");\r\n        return;\r\n      } else if (status === kakao.maps.services.Status.ERROR) {\r\n        alert(\"오류가 생겼어용...\");\r\n        return;\r\n      }\r\n    };\r\n  }, [place]);\r\n\r\n  return <MapContainer id=\"map\"></MapContainer>;\r\n};\r\n\r\nexport default KakaoMap;\r\n"]},"metadata":{},"sourceType":"module"}