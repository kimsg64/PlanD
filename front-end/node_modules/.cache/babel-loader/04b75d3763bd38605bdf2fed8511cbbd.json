{"ast":null,"code":"var _jsxFileName = \"D:\\\\__Bitcamp\\\\__crafts\\\\02_final\\\\project\\\\1009~\\\\PlanD\\\\front-end\\\\src\\\\components\\\\body\\\\map\\\\CustomTMap.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TMapContainer = styled.div`\n  width: 800px;\n  height: 400px;\n`;\n_c = TMapContainer;\n\nconst CustomTMap = () => {\n  _s();\n\n  useEffect(() => {\n    // 지도 생성\n    let script = document.createElement(\"script\");\n    script.innerHTML = `\n    var marker_p;\n    var totalMarkerArr = [];\n    var drawInfoArr = [];\n    var resultdrawArr = [];\n    function initTmap() {\n        let map = new Tmapv2.Map(\"TMapApp\", {\n            center: new Tmapv2.LatLng(37.566481622437934,126.98502302169841),\n            width: \"800px\",\n            height: \"400px\",\n            zoom:15\n        });\n\n        // 시작 심볼\n        let marker_s = new Tmapv2.Marker({\n          position: new Tmapv2.LatLng(37.5668986, 126.97871544),\n          icon: \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_s.png\",\n          iconSize: new Tmapv2.Size(24, 38),\n          map: map,\n        });\n\n        // 도착\n        let marker_e = new Tmapv2.Marker({\n          position: new Tmapv2.LatLng(37.57081522, 127.00160213),\n          icon: \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_e.png\",\n          iconSize: new Tmapv2.Size(24, 38),\n          map: map,\n        });\n\n        \n\n    }\n    initTmap();\n    `; // 경로 탐색 API 호출\n\n    $.ajax({\n      method: \"POST\",\n      url: \"https://apis.openapi.sk.com/tmap/routes/pedestrian?version=1&format=json&callback=result\",\n      async: false,\n      data: {\n        appKey: \"l7xx1f2e7bf8d081449caa3ee9ffbeec5f41\",\n        startX: \"126.97871544\",\n        startY: \"37.56689860\",\n        endX: \"127.00160213\",\n        endY: \"37.57081522\",\n        reqCoordType: \"WGS84GEO\",\n        resCoordType: \"EPSG3857\",\n        startName: \"출발지\",\n        endName: \"도착지\"\n      },\n      success: function (response) {\n        var resultData = response.features; //결과 출력\n\n        var tDistance = \"총 거리 : \" + (resultData[0].properties.totalDistance / 1000).toFixed(1) + \"km,\";\n        var tTime = \" 총 시간 : \" + (resultData[0].properties.totalTime / 60).toFixed(0) + \"분\";\n        $(\"#result\").text(tDistance + tTime); //기존 그려진 라인 & 마커가 있다면 초기화\n\n        if (resultdrawArr.length > 0) {\n          for (var i in resultdrawArr) {\n            resultdrawArr[i].setMap(null);\n          }\n\n          resultdrawArr = [];\n        }\n\n        drawInfoArr = [];\n\n        for (var i in resultData) {\n          //for문 [S]\n          var geometry = resultData[i].geometry;\n          var properties = resultData[i].properties;\n          var polyline_;\n\n          if (geometry.type == \"LineString\") {\n            for (var j in geometry.coordinates) {\n              // 경로들의 결과값(구간)들을 포인트 객체로 변환\n              var latlng = new Tmapv2.Point(geometry.coordinates[j][0], geometry.coordinates[j][1]); // 포인트 객체를 받아 좌표값으로 변환\n\n              var convertPoint = new Tmapv2.Projection.convertEPSG3857ToWGS84GEO(latlng); // 포인트객체의 정보로 좌표값 변환 객체로 저장\n\n              var convertChange = new Tmapv2.LatLng(convertPoint._lat, convertPoint._lng); // 배열에 담기\n\n              drawInfoArr.push(convertChange);\n            }\n          } else {\n            var markerImg = \"\";\n            var pType = \"\";\n            var size;\n\n            if (properties.pointType == \"S\") {\n              //출발지 마커\n              markerImg = \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_s.png\";\n              pType = \"S\";\n              size = new Tmapv2.Size(24, 38);\n            } else if (properties.pointType == \"E\") {\n              //도착지 마커\n              markerImg = \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_e.png\";\n              pType = \"E\";\n              size = new Tmapv2.Size(24, 38);\n            } else {\n              //각 포인트 마커\n              markerImg = \"http://topopen.tmap.co.kr/imgs/point.png\";\n              pType = \"P\";\n              size = new Tmapv2.Size(8, 8);\n            } // 경로들의 결과값들을 포인트 객체로 변환\n\n\n            var latlon = new Tmapv2.Point(geometry.coordinates[0], geometry.coordinates[1]); // 포인트 객체를 받아 좌표값으로 다시 변환\n\n            var convertPoint = new Tmapv2.Projection.convertEPSG3857ToWGS84GEO(latlon);\n            var routeInfoObj = {\n              markerImage: markerImg,\n              lng: convertPoint._lng,\n              lat: convertPoint._lat,\n              pointType: pType\n            }; // Marker 추가\n\n            marker_p = new Tmapv2.Marker({\n              position: new Tmapv2.LatLng(routeInfoObj.lat, routeInfoObj.lng),\n              icon: routeInfoObj.markerImage,\n              iconSize: size,\n              map: map\n            });\n          }\n        } //for문 [E]\n\n\n        drawLine(drawInfoArr);\n      },\n      error: function (request, status, error) {\n        console.log(\"code:\" + request.status + \"\\n\" + \"message:\" + request.responseText + \"\\n\" + \"error:\" + error);\n      }\n    });\n    script.type = \"text/javascript\";\n    script.async = \"async\";\n    document.head.appendChild(script);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map_wrap\",\n      className: \"map_wrap3\",\n      children: /*#__PURE__*/_jsxDEV(TMapContainer, {\n        id: \"TMapApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"map_act_btn_wrap clear_box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CustomTMap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = CustomTMap;\nexport default CustomTMap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TMapContainer\");\n$RefreshReg$(_c2, \"CustomTMap\");","map":{"version":3,"sources":["D:/__Bitcamp/__crafts/02_final/project/1009~/PlanD/front-end/src/components/body/map/CustomTMap.jsx"],"names":["React","useEffect","styled","TMapContainer","div","CustomTMap","script","document","createElement","innerHTML","$","ajax","method","url","async","data","appKey","startX","startY","endX","endY","reqCoordType","resCoordType","startName","endName","success","response","resultData","features","tDistance","properties","totalDistance","toFixed","tTime","totalTime","text","resultdrawArr","length","i","setMap","drawInfoArr","geometry","polyline_","type","j","coordinates","latlng","Tmapv2","Point","convertPoint","Projection","convertEPSG3857ToWGS84GEO","convertChange","LatLng","_lat","_lng","push","markerImg","pType","size","pointType","Size","latlon","routeInfoObj","markerImage","lng","lat","marker_p","Marker","position","icon","iconSize","map","drawLine","error","request","status","console","log","responseText","head","appendChild"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TMapContainer = styled.div`\r\n  width: 800px;\r\n  height: 400px;\r\n`;\r\n\r\nconst CustomTMap = () => {\r\n  useEffect(() => {\r\n    // 지도 생성\r\n    let script = document.createElement(\"script\");\r\n    script.innerHTML = `\r\n    var marker_p;\r\n    var totalMarkerArr = [];\r\n    var drawInfoArr = [];\r\n    var resultdrawArr = [];\r\n    function initTmap() {\r\n        let map = new Tmapv2.Map(\"TMapApp\", {\r\n            center: new Tmapv2.LatLng(37.566481622437934,126.98502302169841),\r\n            width: \"800px\",\r\n            height: \"400px\",\r\n            zoom:15\r\n        });\r\n\r\n        // 시작 심볼\r\n        let marker_s = new Tmapv2.Marker({\r\n          position: new Tmapv2.LatLng(37.5668986, 126.97871544),\r\n          icon: \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_s.png\",\r\n          iconSize: new Tmapv2.Size(24, 38),\r\n          map: map,\r\n        });\r\n\r\n        // 도착\r\n        let marker_e = new Tmapv2.Marker({\r\n          position: new Tmapv2.LatLng(37.57081522, 127.00160213),\r\n          icon: \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_e.png\",\r\n          iconSize: new Tmapv2.Size(24, 38),\r\n          map: map,\r\n        });\r\n\r\n        \r\n\r\n    }\r\n    initTmap();\r\n    `;\r\n\r\n    // 경로 탐색 API 호출\r\n    $.ajax({\r\n      method: \"POST\",\r\n      url: \"https://apis.openapi.sk.com/tmap/routes/pedestrian?version=1&format=json&callback=result\",\r\n      async: false,\r\n      data: {\r\n        appKey: \"l7xx1f2e7bf8d081449caa3ee9ffbeec5f41\",\r\n        startX: \"126.97871544\",\r\n        startY: \"37.56689860\",\r\n        endX: \"127.00160213\",\r\n        endY: \"37.57081522\",\r\n        reqCoordType: \"WGS84GEO\",\r\n        resCoordType: \"EPSG3857\",\r\n        startName: \"출발지\",\r\n        endName: \"도착지\",\r\n      },\r\n      success: function (response) {\r\n        var resultData = response.features;\r\n\r\n        //결과 출력\r\n        var tDistance =\r\n          \"총 거리 : \" +\r\n          (resultData[0].properties.totalDistance / 1000).toFixed(1) +\r\n          \"km,\";\r\n        var tTime =\r\n          \" 총 시간 : \" +\r\n          (resultData[0].properties.totalTime / 60).toFixed(0) +\r\n          \"분\";\r\n\r\n        $(\"#result\").text(tDistance + tTime);\r\n\r\n        //기존 그려진 라인 & 마커가 있다면 초기화\r\n        if (resultdrawArr.length > 0) {\r\n          for (var i in resultdrawArr) {\r\n            resultdrawArr[i].setMap(null);\r\n          }\r\n          resultdrawArr = [];\r\n        }\r\n\r\n        drawInfoArr = [];\r\n\r\n        for (var i in resultData) {\r\n          //for문 [S]\r\n          var geometry = resultData[i].geometry;\r\n          var properties = resultData[i].properties;\r\n          var polyline_;\r\n\r\n          if (geometry.type == \"LineString\") {\r\n            for (var j in geometry.coordinates) {\r\n              // 경로들의 결과값(구간)들을 포인트 객체로 변환\r\n              var latlng = new Tmapv2.Point(\r\n                geometry.coordinates[j][0],\r\n                geometry.coordinates[j][1]\r\n              );\r\n              // 포인트 객체를 받아 좌표값으로 변환\r\n              var convertPoint =\r\n                new Tmapv2.Projection.convertEPSG3857ToWGS84GEO(latlng);\r\n              // 포인트객체의 정보로 좌표값 변환 객체로 저장\r\n              var convertChange = new Tmapv2.LatLng(\r\n                convertPoint._lat,\r\n                convertPoint._lng\r\n              );\r\n              // 배열에 담기\r\n              drawInfoArr.push(convertChange);\r\n            }\r\n          } else {\r\n            var markerImg = \"\";\r\n            var pType = \"\";\r\n            var size;\r\n\r\n            if (properties.pointType == \"S\") {\r\n              //출발지 마커\r\n              markerImg =\r\n                \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_s.png\";\r\n              pType = \"S\";\r\n              size = new Tmapv2.Size(24, 38);\r\n            } else if (properties.pointType == \"E\") {\r\n              //도착지 마커\r\n              markerImg =\r\n                \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_e.png\";\r\n              pType = \"E\";\r\n              size = new Tmapv2.Size(24, 38);\r\n            } else {\r\n              //각 포인트 마커\r\n              markerImg = \"http://topopen.tmap.co.kr/imgs/point.png\";\r\n              pType = \"P\";\r\n              size = new Tmapv2.Size(8, 8);\r\n            }\r\n\r\n            // 경로들의 결과값들을 포인트 객체로 변환\r\n            var latlon = new Tmapv2.Point(\r\n              geometry.coordinates[0],\r\n              geometry.coordinates[1]\r\n            );\r\n\r\n            // 포인트 객체를 받아 좌표값으로 다시 변환\r\n            var convertPoint = new Tmapv2.Projection.convertEPSG3857ToWGS84GEO(\r\n              latlon\r\n            );\r\n\r\n            var routeInfoObj = {\r\n              markerImage: markerImg,\r\n              lng: convertPoint._lng,\r\n              lat: convertPoint._lat,\r\n              pointType: pType,\r\n            };\r\n\r\n            // Marker 추가\r\n            marker_p = new Tmapv2.Marker({\r\n              position: new Tmapv2.LatLng(routeInfoObj.lat, routeInfoObj.lng),\r\n              icon: routeInfoObj.markerImage,\r\n              iconSize: size,\r\n              map: map,\r\n            });\r\n          }\r\n        } //for문 [E]\r\n        drawLine(drawInfoArr);\r\n      },\r\n      error: function (request, status, error) {\r\n        console.log(\r\n          \"code:\" +\r\n            request.status +\r\n            \"\\n\" +\r\n            \"message:\" +\r\n            request.responseText +\r\n            \"\\n\" +\r\n            \"error:\" +\r\n            error\r\n        );\r\n      },\r\n    });\r\n    script.type = \"text/javascript\";\r\n    script.async = \"async\";\r\n    document.head.appendChild(script);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div id=\"map_wrap\" className=\"map_wrap3\">\r\n        <TMapContainer id=\"TMapApp\"></TMapContainer>\r\n      </div>\r\n      <div class=\"map_act_btn_wrap clear_box\"></div>\r\n      <p id=\"result\"></p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomTMap;\r\n"]},"metadata":{},"sourceType":"module"}