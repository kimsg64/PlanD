{"ast":null,"code":"var _jsxFileName = \"D:\\\\__Bitcamp\\\\__crafts\\\\02_final\\\\project\\\\1017~\\\\PlanD\\\\front-end\\\\src\\\\components\\\\body\\\\map\\\\KakaoMapSearchForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\"; // searchPlaces의 첫 렌더링시 호출 막기\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapContainer = styled.div`\n  width: 800px;\n  height: 400px;\n  font-size: var(--font-size-tiny);\n`;\n_c = MapContainer;\nconst {\n  kakao\n} = window;\n\nconst KakaoMapSearchForm = ({\n  place = \"\"\n}) => {\n  _s();\n\n  const [searchedWord, setSearchedWord] = useState(\"\");\n  useEffect(() => {\n    // 마커를 담을 배열입니다\n    var markers = [];\n    var mapContainer = document.getElementById(\"kakaoMap\"),\n        // 지도를 표시할 div\n    mapOption = {\n      center: new kakao.maps.LatLng(37.566826, 126.9786567),\n      // 지도의 중심좌표\n      level: 3 // 지도의 확대 레벨\n\n    }; // 지도를 생성합니다\n\n    var map = new kakao.maps.Map(mapContainer, mapOption); // 장소 검색 객체를 생성합니다\n\n    var ps = new kakao.maps.services.Places(); // 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\n\n    var infowindow = new kakao.maps.InfoWindow({\n      zIndex: 1\n    }); // 키워드로 장소를 검색합니다 => 인풋되었을 때 실행\n\n    searchPlaces(); // 키워드 검색을 요청하는 함수입니다\n\n    function searchPlaces() {\n      var keyword = place;\n\n      if (!keyword.replace(/^\\s+|\\s+$/g, \"\")) {\n        alert(\"키워드를 입력해주세요!\");\n        return false;\n      } // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다\n\n\n      ps.keywordSearch(keyword, placesSearchCB);\n    } // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\n\n\n    function placesSearchCB(data, status, pagination) {\n      if (status === kakao.maps.services.Status.OK) {\n        // 정상적으로 검색이 완료됐으면\n        // 검색 목록과 마커를 표출합니다\n        displayPlaces(data); // 페이지 번호를 표출합니다\n\n        displayPagination(pagination);\n      } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\n        alert(\"검색 결과가 존재하지 않습니다.\");\n        return;\n      } else if (status === kakao.maps.services.Status.ERROR) {\n        alert(\"검색 결과 중 오류가 발생했습니다.\");\n        return;\n      }\n    } // 검색 결과 목록과 마커를 표출하는 함수입니다\n\n\n    function displayPlaces(places) {\n      var listEl = document.getElementById(\"placesList\"),\n          menuEl = document.getElementById(\"menu_wrap\"),\n          fragment = document.createDocumentFragment(),\n          bounds = new kakao.maps.LatLngBounds(),\n          listStr = \"\"; // 검색 결과 목록에 추가된 항목들을 제거합니다\n\n      removeAllChildNods(listEl); // 지도에 표시되고 있는 마커를 제거합니다\n\n      removeMarker();\n\n      for (var i = 0; i < places.length; i++) {\n        // 마커를 생성하고 지도에 표시합니다\n        var placePosition = new kakao.maps.LatLng(places[i].y, places[i].x),\n            marker = addMarker(placePosition, i),\n            itemEl = getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다\n        // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\n        // LatLngBounds 객체에 좌표를 추가합니다\n\n        bounds.extend(placePosition); // 마커와 검색결과 항목에 mouseover 했을때\n        // 해당 장소에 인포윈도우에 장소명을 표시합니다\n        // mouseout 했을 때는 인포윈도우를 닫습니다\n\n        (function (marker, title) {\n          kakao.maps.event.addListener(marker, \"mouseover\", function () {\n            displayInfowindow(marker, title);\n          }); ////////////////////////////////////////////////////////////////\n\n          kakao.maps.event.addListener(marker, \"click\", function () {\n            setSearchedWord(title);\n          });\n          console.log(marker);\n          console.log(title);\n          console.log(searchWord); ////////////////////////////////////////////////////////////////\n\n          kakao.maps.event.addListener(marker, \"mouseout\", function () {\n            infowindow.close();\n          });\n\n          itemEl.onmouseover = function () {\n            displayInfowindow(marker, title);\n          };\n\n          itemEl.onmouseout = function () {\n            infowindow.close();\n          };\n        })(marker, places[i].place_name);\n\n        fragment.appendChild(itemEl);\n      } // 검색결과 항목들을 검색결과 목록 Elemnet에 추가합니다\n\n\n      if (listEl !== null) {\n        listEl.appendChild(fragment);\n        menuEl.scrollTop = 0;\n      } // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\n\n\n      map.setBounds(bounds);\n    } // 검색결과 항목을 Element로 반환하는 함수입니다\n\n\n    function getListItem(index, places) {\n      var el = document.createElement(\"li\"),\n          itemStr = '<span class=\"markerbg marker_' + (index + 1) + '\"></span>' + '<div class=\"info\">' + \"   <h5>\" + places.place_name + \"</h5>\";\n\n      if (places.road_address_name) {\n        itemStr += \"    <span>\" + places.road_address_name + \"</span>\" + '   <span class=\"jibun gray\">' + places.address_name + \"</span>\";\n      } else {\n        itemStr += \"    <span>\" + places.address_name + \"</span>\";\n      }\n\n      itemStr += '  <span class=\"tel\">' + places.phone + \"</span>\" + \"</div>\";\n      el.innerHTML = itemStr;\n      el.className = \"item\";\n      return el;\n    } // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\n\n\n    function addMarker(position, idx, title) {\n      var imageSrc = \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png\",\n          // 마커 이미지 url, 스프라이트 이미지를 씁니다\n      imageSize = new kakao.maps.Size(36, 37),\n          // 마커 이미지의 크기\n      imgOptions = {\n        spriteSize: new kakao.maps.Size(36, 691),\n        // 스프라이트 이미지의 크기\n        spriteOrigin: new kakao.maps.Point(0, idx * 46 + 10),\n        // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n        offset: new kakao.maps.Point(13, 37) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\n\n      },\n          markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\n          marker = new kakao.maps.Marker({\n        position: position,\n        // 마커의 위치\n        image: markerImage\n      });\n      marker.setMap(map); // 지도 위에 마커를 표출합니다\n\n      markers.push(marker); // 배열에 생성된 마커를 추가합니다\n\n      return marker;\n    } // 지도 위에 표시되고 있는 마커를 모두 제거합니다\n\n\n    function removeMarker() {\n      for (var i = 0; i < markers.length; i++) {\n        markers[i].setMap(null);\n      }\n\n      markers = [];\n    } // 검색결과 목록 하단에 페이지번호를 표시는 함수입니다\n\n\n    function displayPagination(pagination) {\n      var paginationEl = document.getElementById(\"pagination\"),\n          fragment = document.createDocumentFragment(),\n          i; // 기존에 추가된 페이지번호를 삭제합니다\n\n      if (paginationEl !== null) {\n        while (paginationEl.hasChildNodes()) {\n          paginationEl.removeChild(paginationEl.lastChild);\n        }\n      }\n\n      for (i = 1; i <= pagination.last; i++) {\n        var el = document.createElement(\"a\");\n        el.href = \"#\";\n        el.innerHTML = i;\n\n        if (i === pagination.current) {\n          el.className = \"on\";\n        } else {\n          el.onclick = function (i) {\n            return function () {\n              pagination.gotoPage(i);\n            };\n          }(i);\n        }\n\n        fragment.appendChild(el);\n      }\n\n      if (paginationEl !== null) {\n        paginationEl.appendChild(fragment);\n      }\n    } // 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다\n    // 인포윈도우에 장소명을 표시합니다\n\n\n    function displayInfowindow(marker, title) {\n      var content = '<div style=\"padding:5px;z-index:1;\">' + title + \"</div>\";\n      infowindow.setContent(content);\n      infowindow.open(map, marker);\n    } // 검색결과 목록의 자식 Element를 제거하는 함수입니다\n\n\n    function removeAllChildNods(el) {\n      if (el !== null) {\n        while (el.hasChildNodes()) {\n          el.removeChild(el.lastChild);\n        }\n      }\n    } //////////////////////////////////////////////\n    //   const onClickMarker = (e) => {\n    //     console.log(e);\n    //   };\n    //   markers.forEach((marker) =>\n    //     marker.addEventListener(\"click\", onClickMarker)\n    //   );\n\n\n    console.log(\"키워드: \", searchedWord); /////////////////////////////////////////////\n  }, [place]);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    id: \"kakaoMap\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 10\n  }, this);\n};\n\n_s(KakaoMapSearchForm, \"R3gc/YXPY1P/rLhKUEcOIsN3eMQ=\");\n\n_c2 = KakaoMapSearchForm;\nexport default KakaoMapSearchForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapContainer\");\n$RefreshReg$(_c2, \"KakaoMapSearchForm\");","map":{"version":3,"sources":["D:/__Bitcamp/__crafts/02_final/project/1017~/PlanD/front-end/src/components/body/map/KakaoMapSearchForm.jsx"],"names":["React","useEffect","useState","styled","MapContainer","div","kakao","window","KakaoMapSearchForm","place","searchedWord","setSearchedWord","markers","mapContainer","document","getElementById","mapOption","center","maps","LatLng","level","map","Map","ps","services","Places","infowindow","InfoWindow","zIndex","searchPlaces","keyword","replace","alert","keywordSearch","placesSearchCB","data","status","pagination","Status","OK","displayPlaces","displayPagination","ZERO_RESULT","ERROR","places","listEl","menuEl","fragment","createDocumentFragment","bounds","LatLngBounds","listStr","removeAllChildNods","removeMarker","i","length","placePosition","y","x","marker","addMarker","itemEl","getListItem","extend","title","event","addListener","displayInfowindow","console","log","searchWord","close","onmouseover","onmouseout","place_name","appendChild","scrollTop","setBounds","index","el","createElement","itemStr","road_address_name","address_name","phone","innerHTML","className","position","idx","imageSrc","imageSize","Size","imgOptions","spriteSize","spriteOrigin","Point","offset","markerImage","MarkerImage","Marker","image","setMap","push","paginationEl","hasChildNodes","removeChild","lastChild","last","href","current","onclick","gotoPage","content","setContent","open"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// searchPlaces의 첫 렌더링시 호출 막기\r\n\r\nconst MapContainer = styled.div`\r\n  width: 800px;\r\n  height: 400px;\r\n  font-size: var(--font-size-tiny);\r\n`;\r\n\r\nconst { kakao } = window;\r\nconst KakaoMapSearchForm = ({ place = \"\" }) => {\r\n  const [searchedWord, setSearchedWord] = useState(\"\");\r\n  useEffect(() => {\r\n    // 마커를 담을 배열입니다\r\n    var markers = [];\r\n\r\n    var mapContainer = document.getElementById(\"kakaoMap\"), // 지도를 표시할 div\r\n      mapOption = {\r\n        center: new kakao.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표\r\n        level: 3, // 지도의 확대 레벨\r\n      };\r\n\r\n    // 지도를 생성합니다\r\n    var map = new kakao.maps.Map(mapContainer, mapOption);\r\n\r\n    // 장소 검색 객체를 생성합니다\r\n    var ps = new kakao.maps.services.Places();\r\n\r\n    // 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\r\n    var infowindow = new kakao.maps.InfoWindow({ zIndex: 1 });\r\n\r\n    // 키워드로 장소를 검색합니다 => 인풋되었을 때 실행\r\n    searchPlaces();\r\n\r\n    // 키워드 검색을 요청하는 함수입니다\r\n    function searchPlaces() {\r\n      var keyword = place;\r\n\r\n      if (!keyword.replace(/^\\s+|\\s+$/g, \"\")) {\r\n        alert(\"키워드를 입력해주세요!\");\r\n        return false;\r\n      }\r\n\r\n      // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다\r\n      ps.keywordSearch(keyword, placesSearchCB);\r\n    }\r\n\r\n    // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\r\n    function placesSearchCB(data, status, pagination) {\r\n      if (status === kakao.maps.services.Status.OK) {\r\n        // 정상적으로 검색이 완료됐으면\r\n        // 검색 목록과 마커를 표출합니다\r\n        displayPlaces(data);\r\n\r\n        // 페이지 번호를 표출합니다\r\n        displayPagination(pagination);\r\n      } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\r\n        alert(\"검색 결과가 존재하지 않습니다.\");\r\n        return;\r\n      } else if (status === kakao.maps.services.Status.ERROR) {\r\n        alert(\"검색 결과 중 오류가 발생했습니다.\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    // 검색 결과 목록과 마커를 표출하는 함수입니다\r\n    function displayPlaces(places) {\r\n      var listEl = document.getElementById(\"placesList\"),\r\n        menuEl = document.getElementById(\"menu_wrap\"),\r\n        fragment = document.createDocumentFragment(),\r\n        bounds = new kakao.maps.LatLngBounds(),\r\n        listStr = \"\";\r\n\r\n      // 검색 결과 목록에 추가된 항목들을 제거합니다\r\n      removeAllChildNods(listEl);\r\n\r\n      // 지도에 표시되고 있는 마커를 제거합니다\r\n      removeMarker();\r\n\r\n      for (var i = 0; i < places.length; i++) {\r\n        // 마커를 생성하고 지도에 표시합니다\r\n        var placePosition = new kakao.maps.LatLng(places[i].y, places[i].x),\r\n          marker = addMarker(placePosition, i),\r\n          itemEl = getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다\r\n\r\n        // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n        // LatLngBounds 객체에 좌표를 추가합니다\r\n        bounds.extend(placePosition);\r\n\r\n        // 마커와 검색결과 항목에 mouseover 했을때\r\n        // 해당 장소에 인포윈도우에 장소명을 표시합니다\r\n        // mouseout 했을 때는 인포윈도우를 닫습니다\r\n        (function (marker, title) {\r\n          kakao.maps.event.addListener(marker, \"mouseover\", function () {\r\n            displayInfowindow(marker, title);\r\n          });\r\n          ////////////////////////////////////////////////////////////////\r\n          kakao.maps.event.addListener(marker, \"click\", function () {\r\n            setSearchedWord(title);\r\n          });\r\n          console.log(marker);\r\n          console.log(title);\r\n          console.log(searchWord);\r\n          ////////////////////////////////////////////////////////////////\r\n\r\n          kakao.maps.event.addListener(marker, \"mouseout\", function () {\r\n            infowindow.close();\r\n          });\r\n\r\n          itemEl.onmouseover = function () {\r\n            displayInfowindow(marker, title);\r\n          };\r\n\r\n          itemEl.onmouseout = function () {\r\n            infowindow.close();\r\n          };\r\n        })(marker, places[i].place_name);\r\n\r\n        fragment.appendChild(itemEl);\r\n      }\r\n\r\n      // 검색결과 항목들을 검색결과 목록 Elemnet에 추가합니다\r\n      if (listEl !== null) {\r\n        listEl.appendChild(fragment);\r\n        menuEl.scrollTop = 0;\r\n      }\r\n\r\n      // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n      map.setBounds(bounds);\r\n    }\r\n\r\n    // 검색결과 항목을 Element로 반환하는 함수입니다\r\n    function getListItem(index, places) {\r\n      var el = document.createElement(\"li\"),\r\n        itemStr =\r\n          '<span class=\"markerbg marker_' +\r\n          (index + 1) +\r\n          '\"></span>' +\r\n          '<div class=\"info\">' +\r\n          \"   <h5>\" +\r\n          places.place_name +\r\n          \"</h5>\";\r\n\r\n      if (places.road_address_name) {\r\n        itemStr +=\r\n          \"    <span>\" +\r\n          places.road_address_name +\r\n          \"</span>\" +\r\n          '   <span class=\"jibun gray\">' +\r\n          places.address_name +\r\n          \"</span>\";\r\n      } else {\r\n        itemStr += \"    <span>\" + places.address_name + \"</span>\";\r\n      }\r\n\r\n      itemStr += '  <span class=\"tel\">' + places.phone + \"</span>\" + \"</div>\";\r\n\r\n      el.innerHTML = itemStr;\r\n      el.className = \"item\";\r\n\r\n      return el;\r\n    }\r\n\r\n    // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\r\n    function addMarker(position, idx, title) {\r\n      var imageSrc =\r\n          \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png\", // 마커 이미지 url, 스프라이트 이미지를 씁니다\r\n        imageSize = new kakao.maps.Size(36, 37), // 마커 이미지의 크기\r\n        imgOptions = {\r\n          spriteSize: new kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기\r\n          spriteOrigin: new kakao.maps.Point(0, idx * 46 + 10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\r\n          offset: new kakao.maps.Point(13, 37), // 마커 좌표에 일치시킬 이미지 내에서의 좌표\r\n        },\r\n        markerImage = new kakao.maps.MarkerImage(\r\n          imageSrc,\r\n          imageSize,\r\n          imgOptions\r\n        ),\r\n        marker = new kakao.maps.Marker({\r\n          position: position, // 마커의 위치\r\n          image: markerImage,\r\n        });\r\n\r\n      marker.setMap(map); // 지도 위에 마커를 표출합니다\r\n      markers.push(marker); // 배열에 생성된 마커를 추가합니다\r\n\r\n      return marker;\r\n    }\r\n\r\n    // 지도 위에 표시되고 있는 마커를 모두 제거합니다\r\n    function removeMarker() {\r\n      for (var i = 0; i < markers.length; i++) {\r\n        markers[i].setMap(null);\r\n      }\r\n      markers = [];\r\n    }\r\n\r\n    // 검색결과 목록 하단에 페이지번호를 표시는 함수입니다\r\n    function displayPagination(pagination) {\r\n      var paginationEl = document.getElementById(\"pagination\"),\r\n        fragment = document.createDocumentFragment(),\r\n        i;\r\n\r\n      // 기존에 추가된 페이지번호를 삭제합니다\r\n      if (paginationEl !== null) {\r\n        while (paginationEl.hasChildNodes()) {\r\n          paginationEl.removeChild(paginationEl.lastChild);\r\n        }\r\n      }\r\n\r\n      for (i = 1; i <= pagination.last; i++) {\r\n        var el = document.createElement(\"a\");\r\n        el.href = \"#\";\r\n        el.innerHTML = i;\r\n\r\n        if (i === pagination.current) {\r\n          el.className = \"on\";\r\n        } else {\r\n          el.onclick = (function (i) {\r\n            return function () {\r\n              pagination.gotoPage(i);\r\n            };\r\n          })(i);\r\n        }\r\n\r\n        fragment.appendChild(el);\r\n      }\r\n      if (paginationEl !== null) {\r\n        paginationEl.appendChild(fragment);\r\n      }\r\n    }\r\n\r\n    // 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다\r\n    // 인포윈도우에 장소명을 표시합니다\r\n    function displayInfowindow(marker, title) {\r\n      var content = '<div style=\"padding:5px;z-index:1;\">' + title + \"</div>\";\r\n\r\n      infowindow.setContent(content);\r\n      infowindow.open(map, marker);\r\n    }\r\n\r\n    // 검색결과 목록의 자식 Element를 제거하는 함수입니다\r\n    function removeAllChildNods(el) {\r\n      if (el !== null) {\r\n        while (el.hasChildNodes()) {\r\n          el.removeChild(el.lastChild);\r\n        }\r\n      }\r\n    }\r\n\r\n    //////////////////////////////////////////////\r\n    //   const onClickMarker = (e) => {\r\n    //     console.log(e);\r\n    //   };\r\n    //   markers.forEach((marker) =>\r\n    //     marker.addEventListener(\"click\", onClickMarker)\r\n    //   );\r\n    console.log(\"키워드: \", searchedWord);\r\n    /////////////////////////////////////////////\r\n  }, [place]);\r\n\r\n  return <MapContainer id=\"kakaoMap\" />;\r\n};\r\n\r\nexport default KakaoMapSearchForm;\r\n"]},"metadata":{},"sourceType":"module"}