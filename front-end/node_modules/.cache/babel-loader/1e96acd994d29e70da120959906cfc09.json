{"ast":null,"code":"var _jsxFileName = \"D:\\\\__Bitcamp\\\\__crafts\\\\02_final\\\\project\\\\1022 ~\\\\PlanD\\\\front-end\\\\src\\\\components\\\\body\\\\map\\\\metorMap\\\\PlanningETC.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport CustomCalerdar from \"../../calendar/CustomCalerdar\";\nimport CheckBoxSet from \"../../mixin/CheckBoxSet\";\nimport Form from \"../../mixin/Form\";\nimport { Button } from \"../../mixin/Mixin\";\nimport { read_cookie } from \"sfcookies\";\nimport axios from \"axios\";\nimport SelectBox from \"../../mixin/SelectBox\";\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n_c = Container;\nconst SearchForm = styled(Form)`\n  & > div {\n    padding: calc(var(--padding-default) * 2);\n  }\n`;\n_c2 = SearchForm;\nconst Label = styled.label`\n  font-size: var(--font-size-normal);\n  margin-bottom: var(--margin-default);\n`;\n_c3 = Label;\nconst ItemContainer = styled.div`\n  width: 100%;\n  display: flex;\n  margin-bottom: var(--margin-default);\n`;\n_c4 = ItemContainer;\nconst TitleSection = styled.section`\n  width: 300px;\n`;\n_c5 = TitleSection;\nconst ContentSection = styled.section`\n  width: calc(100% - 300px);\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n`;\n_c6 = ContentSection;\nconst OptionContainer = styled(ItemContainer)`\n  flex-direction: column;\n`;\n_c7 = OptionContainer;\nconst Indicator = styled.div`\n  display: flex;\n  padding-right: calc(var(--padding-default) * 2);\n`;\n_c8 = Indicator;\nconst ColorIndicator = styled.div`\n  width: 40px;\n  height: 20px;\n  margin-right: calc(var(--margin-default) / 4);\n  background-color: ${props => props.bgColor || \"inherit\"};\n`;\n_c9 = ColorIndicator;\nconst TextIndicator = styled.div`\n  font-size: var(--font-size-small);\n  margin-right: calc(var(--margin-default) / 4);\n`;\n_c10 = TextIndicator;\nconst SearchButton = styled(Button)`\n  margin-top: var(--margin-default);\n`;\n_c11 = SearchButton;\n\nconst PlanningETC = ({\n  selectedDate = null,\n  setSelectedDate = () => {},\n  selectedStation = \"\",\n  lineNum = \"\"\n}) => {\n  _s();\n\n  // const [time, setTime] = useState(10);\n  const [sort1, setSort1] = useState(\"\");\n  const [sort2, setSort2] = useState(\"\");\n  const [sort3, setSort3] = useState(\"\");\n  const [opt, setOpt] = useState([]);\n  const [weather, setWeather] = useState(\"\");\n  const history = useHistory(); // console.log(\"ETC 페이지\", selectedDate);\n  // console.log(\"ETC\", selectedDate);\n  // console.log(\"ETC\", selectedStation);\n  // 날짜 클릭되면 해당 날짜의 날씨 데이터 구하기\n\n  useEffect(() => {\n    // 오늘 날짜 구하기\n    const today = new Date();\n    const dDay = new Date(selectedDate); // console.log(today);\n    // console.log(dDay);\n\n    const gap = dDay - today; // console.log(gap);\n    // console.log(new Date(2021, 9, 32));\n\n    let index;\n\n    if (gap > 1000 * 60 * 60 * 24 * 4) {\n      alert(\"현재 날씨 예측 서비스는 최대 4일 뒤까지만 서비스됩니다.\");\n      return setSelectedDate(null);\n    } else {\n      const thisYear = today.getFullYear();\n      const thisMonth = today.getMonth();\n      const thisDate = today.getDate();\n      const dYear = dDay.getFullYear();\n      const dMonth = dDay.getMonth();\n      const dDate = dDay.getDate(); // console.log(\n      //   new Date(thisYear, thisMonth, thisDate).toDateString() ===\n      //     new Date(dYear, dMonth, dDate).toDateString()\n      // );\n\n      index = new Date(thisYear, thisMonth, thisDate).toDateString() === new Date(dYear, dMonth, dDate).toDateString() ? 3 : new Date(thisYear, thisMonth, thisDate + 1).toDateString() === new Date(dYear, dMonth, dDate).toDateString() ? 11 : new Date(thisYear, thisMonth, thisDate + 2).toDateString() === new Date(dYear, dMonth, dDate).toDateString() ? 19 : new Date(thisYear, thisMonth, thisDate + 3).toDateString() === new Date(dYear, dMonth, dDate).toDateString() ? 27 : 35; // console.log(index);\n    } // const index;\n\n\n    const url = \"https://api.openweathermap.org/data/2.5/forecast?q=seoul&appid=28dfc3b27e5cac4c9fd964f060b19070&lang=kr\";\n    axios.get(url).then(response => {\n      // console.log(response.data.list[index].weather[0].icon);\n      setWeather(response.data.list[index].weather);\n    }).catch(error => console.log(error));\n  }, [selectedDate]); // 예약 날짜\n\n  const stringifyResdate = () => {\n    const dDay = new Date(selectedDate);\n    const year = dDay.getFullYear();\n    const month = dDay.getMonth() + 1;\n    const date = dDay.getDate();\n    return `${year}-${month}-${date}`;\n  };\n\n  const sortNum = sort1 + sort2 + sort3 === \"식당카페기타\" ? 1 : sort1 + sort2 + sort3 === \"식당기타카페\" ? 2 : sort1 + sort2 + sort3 === \"카페식당기타\" ? 3 : sort1 + sort2 + sort3 === \"카페기타식당\" ? 4 : sort1 + sort2 + sort3 === \"기타식당카페\" ? 5 : sort1 + sort2 + sort3 === \"기타카페식당\" ? 6 : null;\n  const stcode = selectedStation === \"천호\" ? \"121\" : selectedStation === \"잠실\" ? \"122\" : selectedStation === \"석촌\" ? \"123\" : selectedStation === \"가락시장\" ? \"124\" : selectedStation === \"장지\" ? \"125\" : null;\n  console.log(\"날씨\", weather);\n\n  const onSubmitForm = e => {\n    e.preventDefault(); // console.log(sortNum);\n\n    if (selectedStation === \"역\") {\n      alert(\"역과 라인을 선택해 주세요!\");\n      return;\n    } else {\n      const body = {\n        userId: read_cookie(\"userId\"),\n        line: lineNum + \"호선\",\n        stname: selectedStation,\n        stcode: stcode,\n        resdate: stringifyResdate(),\n        coursesort: sortNum,\n        opt: opt.join(\"#\"),\n        weather: weather[0].icon\n      };\n      console.log(\"플래닝 전송시 넘어갈 바디: \", body); // 데이터 전송\n\n      axios.post(\"/wherewego/coursePlanD\", body).then(response => {\n        console.log(\"response : \", response.data); // ★★★★★ 받은 데이터 가지고 결과창으로 보내기\n        // console.log(history);\n\n        if (response.data.length > 0) {\n          history.push({\n            pathname: \"/result\",\n            props: {\n              result: response.data,\n              weather: weather,\n              resdate: stringifyResdate(),\n              sort: [sort1, sort2, sort3]\n            }\n          });\n        } else {\n          alert(\"해당되는 코스가 없습니다...\");\n        }\n      }).catch(error => {\n        console.log(\"failed\", error);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(SearchForm, {\n      onSubmit: onSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(ItemContainer, {\n        children: [/*#__PURE__*/_jsxDEV(TitleSection, {\n          children: /*#__PURE__*/_jsxDEV(Label, {\n            children: \"\\uB370\\uC774\\uD2B8 \\uB0A0\\uC9DC\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContentSection, {\n          children: [/*#__PURE__*/_jsxDEV(Indicator, {\n            children: [/*#__PURE__*/_jsxDEV(ColorIndicator, {\n              bgColor: \"var(--color-focus)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextIndicator, {\n              children: \"\\uC624\\uB298\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ColorIndicator, {\n              bgColor: \"var(--color-green)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextIndicator, {\n              children: \"\\uC608\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomCalerdar, {\n            selectedDate: selectedDate,\n            setSelectedDate: setSelectedDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ItemContainer, {\n        children: [/*#__PURE__*/_jsxDEV(TitleSection, {\n          children: /*#__PURE__*/_jsxDEV(Label, {\n            children: \"\\uB370\\uC774\\uD2B8 \\uC21C\\uC11C\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContentSection, {\n          children: /*#__PURE__*/_jsxDEV(SelectBox, {\n            sort1: sort1,\n            setSort1: setSort1,\n            sort2: sort2,\n            setSort2: setSort2,\n            sort3: sort3,\n            setSort3: setSort3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OptionContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"\\uAD00\\uC2EC\\uC0AC\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CheckBoxSet, {\n          setOpt: setOpt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchButton, {\n        type: \"submit\",\n        children: \"\\uCF54\\uC2A4 \\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PlanningETC, \"YxzGD6CZ6zcT1xRqCie3BF+YODo=\", false, function () {\n  return [useHistory];\n});\n\n_c12 = PlanningETC;\nexport default PlanningETC;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"SearchForm\");\n$RefreshReg$(_c3, \"Label\");\n$RefreshReg$(_c4, \"ItemContainer\");\n$RefreshReg$(_c5, \"TitleSection\");\n$RefreshReg$(_c6, \"ContentSection\");\n$RefreshReg$(_c7, \"OptionContainer\");\n$RefreshReg$(_c8, \"Indicator\");\n$RefreshReg$(_c9, \"ColorIndicator\");\n$RefreshReg$(_c10, \"TextIndicator\");\n$RefreshReg$(_c11, \"SearchButton\");\n$RefreshReg$(_c12, \"PlanningETC\");","map":{"version":3,"sources":["D:/__Bitcamp/__crafts/02_final/project/1022 ~/PlanD/front-end/src/components/body/map/metorMap/PlanningETC.jsx"],"names":["React","useEffect","useState","styled","CustomCalerdar","CheckBoxSet","Form","Button","read_cookie","axios","SelectBox","useHistory","Container","div","SearchForm","Label","label","ItemContainer","TitleSection","section","ContentSection","OptionContainer","Indicator","ColorIndicator","props","bgColor","TextIndicator","SearchButton","PlanningETC","selectedDate","setSelectedDate","selectedStation","lineNum","sort1","setSort1","sort2","setSort2","sort3","setSort3","opt","setOpt","weather","setWeather","history","today","Date","dDay","gap","index","alert","thisYear","getFullYear","thisMonth","getMonth","thisDate","getDate","dYear","dMonth","dDate","toDateString","url","get","then","response","data","list","catch","error","console","log","stringifyResdate","year","month","date","sortNum","stcode","onSubmitForm","e","preventDefault","body","userId","line","stname","resdate","coursesort","join","icon","post","length","push","pathname","result","sort"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CustomCalerdar from \"../../calendar/CustomCalerdar\";\r\nimport CheckBoxSet from \"../../mixin/CheckBoxSet\";\r\nimport Form from \"../../mixin/Form\";\r\nimport { Button } from \"../../mixin/Mixin\";\r\nimport { read_cookie } from \"sfcookies\";\r\nimport axios from \"axios\";\r\nimport SelectBox from \"../../mixin/SelectBox\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst SearchForm = styled(Form)`\r\n  & > div {\r\n    padding: calc(var(--padding-default) * 2);\r\n  }\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: var(--font-size-normal);\r\n  margin-bottom: var(--margin-default);\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  margin-bottom: var(--margin-default);\r\n`;\r\n\r\nconst TitleSection = styled.section`\r\n  width: 300px;\r\n`;\r\n\r\nconst ContentSection = styled.section`\r\n  width: calc(100% - 300px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n`;\r\n\r\nconst OptionContainer = styled(ItemContainer)`\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Indicator = styled.div`\r\n  display: flex;\r\n  padding-right: calc(var(--padding-default) * 2);\r\n`;\r\n\r\nconst ColorIndicator = styled.div`\r\n  width: 40px;\r\n  height: 20px;\r\n  margin-right: calc(var(--margin-default) / 4);\r\n  background-color: ${(props) => props.bgColor || \"inherit\"};\r\n`;\r\n\r\nconst TextIndicator = styled.div`\r\n  font-size: var(--font-size-small);\r\n  margin-right: calc(var(--margin-default) / 4);\r\n`;\r\n\r\nconst SearchButton = styled(Button)`\r\n  margin-top: var(--margin-default);\r\n`;\r\n\r\nconst PlanningETC = ({\r\n  selectedDate = null,\r\n  setSelectedDate = () => {},\r\n  selectedStation = \"\",\r\n  lineNum = \"\",\r\n}) => {\r\n  // const [time, setTime] = useState(10);\r\n  const [sort1, setSort1] = useState(\"\");\r\n  const [sort2, setSort2] = useState(\"\");\r\n  const [sort3, setSort3] = useState(\"\");\r\n  const [opt, setOpt] = useState([]);\r\n  const [weather, setWeather] = useState(\"\");\r\n  const history = useHistory();\r\n  // console.log(\"ETC 페이지\", selectedDate);\r\n  // console.log(\"ETC\", selectedDate);\r\n  // console.log(\"ETC\", selectedStation);\r\n\r\n  // 날짜 클릭되면 해당 날짜의 날씨 데이터 구하기\r\n  useEffect(() => {\r\n    // 오늘 날짜 구하기\r\n    const today = new Date();\r\n    const dDay = new Date(selectedDate);\r\n    // console.log(today);\r\n    // console.log(dDay);\r\n    const gap = dDay - today;\r\n    // console.log(gap);\r\n    // console.log(new Date(2021, 9, 32));\r\n    let index;\r\n    if (gap > 1000 * 60 * 60 * 24 * 4) {\r\n      alert(\"현재 날씨 예측 서비스는 최대 4일 뒤까지만 서비스됩니다.\");\r\n      return setSelectedDate(null);\r\n    } else {\r\n      const thisYear = today.getFullYear();\r\n      const thisMonth = today.getMonth();\r\n      const thisDate = today.getDate();\r\n      const dYear = dDay.getFullYear();\r\n      const dMonth = dDay.getMonth();\r\n      const dDate = dDay.getDate();\r\n      // console.log(\r\n      //   new Date(thisYear, thisMonth, thisDate).toDateString() ===\r\n      //     new Date(dYear, dMonth, dDate).toDateString()\r\n      // );\r\n      index =\r\n        new Date(thisYear, thisMonth, thisDate).toDateString() ===\r\n        new Date(dYear, dMonth, dDate).toDateString()\r\n          ? 3\r\n          : new Date(thisYear, thisMonth, thisDate + 1).toDateString() ===\r\n            new Date(dYear, dMonth, dDate).toDateString()\r\n          ? 11\r\n          : new Date(thisYear, thisMonth, thisDate + 2).toDateString() ===\r\n            new Date(dYear, dMonth, dDate).toDateString()\r\n          ? 19\r\n          : new Date(thisYear, thisMonth, thisDate + 3).toDateString() ===\r\n            new Date(dYear, dMonth, dDate).toDateString()\r\n          ? 27\r\n          : 35;\r\n      // console.log(index);\r\n    }\r\n\r\n    // const index;\r\n\r\n    const url =\r\n      \"https://api.openweathermap.org/data/2.5/forecast?q=seoul&appid=28dfc3b27e5cac4c9fd964f060b19070&lang=kr\";\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        // console.log(response.data.list[index].weather[0].icon);\r\n        setWeather(response.data.list[index].weather);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, [selectedDate]);\r\n\r\n  // 예약 날짜\r\n  const stringifyResdate = () => {\r\n    const dDay = new Date(selectedDate);\r\n    const year = dDay.getFullYear();\r\n    const month = dDay.getMonth() + 1;\r\n    const date = dDay.getDate();\r\n    return `${year}-${month}-${date}`;\r\n  };\r\n\r\n  const sortNum =\r\n    sort1 + sort2 + sort3 === \"식당카페기타\"\r\n      ? 1\r\n      : sort1 + sort2 + sort3 === \"식당기타카페\"\r\n      ? 2\r\n      : sort1 + sort2 + sort3 === \"카페식당기타\"\r\n      ? 3\r\n      : sort1 + sort2 + sort3 === \"카페기타식당\"\r\n      ? 4\r\n      : sort1 + sort2 + sort3 === \"기타식당카페\"\r\n      ? 5\r\n      : sort1 + sort2 + sort3 === \"기타카페식당\"\r\n      ? 6\r\n      : null;\r\n\r\n  const stcode =\r\n    selectedStation === \"천호\"\r\n      ? \"121\"\r\n      : selectedStation === \"잠실\"\r\n      ? \"122\"\r\n      : selectedStation === \"석촌\"\r\n      ? \"123\"\r\n      : selectedStation === \"가락시장\"\r\n      ? \"124\"\r\n      : selectedStation === \"장지\"\r\n      ? \"125\"\r\n      : null;\r\n\r\n  console.log(\"날씨\", weather);\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    // console.log(sortNum);\r\n    if (selectedStation === \"역\") {\r\n      alert(\"역과 라인을 선택해 주세요!\");\r\n      return;\r\n    } else {\r\n      const body = {\r\n        userId: read_cookie(\"userId\"),\r\n        line: lineNum + \"호선\",\r\n        stname: selectedStation,\r\n        stcode: stcode,\r\n        resdate: stringifyResdate(),\r\n        coursesort: sortNum,\r\n        opt: opt.join(\"#\"),\r\n        weather: weather[0].icon,\r\n      };\r\n      console.log(\"플래닝 전송시 넘어갈 바디: \", body);\r\n\r\n      // 데이터 전송\r\n      axios\r\n        .post(\"/wherewego/coursePlanD\", body)\r\n        .then((response) => {\r\n          console.log(\"response : \", response.data);\r\n          // ★★★★★ 받은 데이터 가지고 결과창으로 보내기\r\n          // console.log(history);\r\n          if (response.data.length > 0) {\r\n            history.push({\r\n              pathname: \"/result\",\r\n              props: {\r\n                result: response.data,\r\n                weather: weather,\r\n                resdate: stringifyResdate(),\r\n                sort: [sort1, sort2, sort3],\r\n              },\r\n            });\r\n          } else {\r\n            alert(\"해당되는 코스가 없습니다...\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"failed\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <SearchForm onSubmit={onSubmitForm}>\r\n        <ItemContainer>\r\n          <TitleSection>\r\n            <Label>데이트 날짜를 선택하세요.</Label>\r\n          </TitleSection>\r\n          <ContentSection>\r\n            <Indicator>\r\n              <ColorIndicator bgColor=\"var(--color-focus)\" />\r\n              <TextIndicator>오늘</TextIndicator>\r\n              <ColorIndicator bgColor=\"var(--color-green)\" />\r\n              <TextIndicator>예정</TextIndicator>\r\n            </Indicator>\r\n            <CustomCalerdar\r\n              selectedDate={selectedDate}\r\n              setSelectedDate={setSelectedDate}\r\n            />\r\n          </ContentSection>\r\n        </ItemContainer>\r\n        {/* <ItemContainer>\r\n          <TitleSection>\r\n            <Label>데이트 시작할 시간을 선택하세요.</Label>\r\n          </TitleSection>\r\n          <ContentSection>\r\n            <Indicator>\r\n              <select onChange={(e) => setTime(e.target.value)}>\r\n                <option value=\"10\">10:00</option>\r\n                <option value=\"12\">12:00</option>\r\n                <option value=\"14\">14:00</option>\r\n                <option value=\"16\">16:00</option>\r\n                <option value=\"18\">18:00</option>\r\n                <option value=\"20\">20:00</option>\r\n              </select>\r\n            </Indicator>\r\n          </ContentSection>\r\n        </ItemContainer> */}\r\n        <ItemContainer>\r\n          <TitleSection>\r\n            <Label>데이트 순서를 선택하세요.</Label>\r\n          </TitleSection>\r\n          <ContentSection>\r\n            <SelectBox\r\n              sort1={sort1}\r\n              setSort1={setSort1}\r\n              sort2={sort2}\r\n              setSort2={setSort2}\r\n              sort3={sort3}\r\n              setSort3={setSort3}\r\n            />\r\n          </ContentSection>\r\n        </ItemContainer>\r\n        <OptionContainer>\r\n          <Label>관심사를 선택하세요 </Label>\r\n          <CheckBoxSet setOpt={setOpt} />\r\n        </OptionContainer>\r\n        {/* 사실은 axios로 데이터를 받은 뒤 이동해야 함 */}\r\n        <SearchButton type=\"submit\">코스 검색</SearchButton>\r\n      </SearchForm>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PlanningETC;\r\n"]},"metadata":{},"sourceType":"module"}