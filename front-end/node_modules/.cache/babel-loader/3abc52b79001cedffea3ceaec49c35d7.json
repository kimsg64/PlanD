{"ast":null,"code":"var _jsxFileName = \"D:\\\\__Bitcamp\\\\__crafts\\\\02_final\\\\project\\\\1009~\\\\PlanD\\\\front-end\\\\src\\\\components\\\\body\\\\map\\\\CustomGoogleMap.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useEffect, useRef, useState } from \"react\";\nimport { DirectionsRenderer, DirectionsService, GoogleMap, LoadScript } from \"@react-google-maps/api\"; // props는 상위 컴포넌트에서 전달받은 내용이 될 것\n// const CustomGoogleDirections = (props) => {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CustomGoogleDirections = (startPoint = {}, wayPoints = {}, endPoint = {}) => {\n  _s();\n\n  var _origin, _origin2, _destination, _destination2;\n\n  const [directions, setDirections] = useState(); // const { origin, waypoints, destination } = props;\n\n  const count = useRef(0);\n  console.log(\"구글맵\", origin, wayPoints, destination);\n  const options = {\n    polyLineOptions: {\n      strokeColor: \"black\",\n      strokeWeight: 6,\n      strokeOpacity: 0.8\n    }\n  };\n  useEffect(() => {\n    count.current = 0;\n    console.log(origin, wayPoints, destination);\n  }, [(_origin = origin) === null || _origin === void 0 ? void 0 : _origin.lat, (_origin2 = origin) === null || _origin2 === void 0 ? void 0 : _origin2.lng, (_destination = destination) === null || _destination === void 0 ? void 0 : _destination.lat, (_destination2 = destination) === null || _destination2 === void 0 ? void 0 : _destination2.lng, wayPoints === null || wayPoints === void 0 ? void 0 : wayPoints.lat, wayPoints === null || wayPoints === void 0 ? void 0 : wayPoints.lng]);\n\n  const directionsCallback = (result, status) => {\n    console.log(result, status);\n\n    if (status === \"OK\" && count.current === 0) {\n      count.current += 1;\n      setDirections(result);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DirectionsService // travelMode: 'TRANSIT' or 'WALKING'\n    , {\n      options: {\n        origin,\n        waypoints: [{\n          location: { ...wayPoints\n          }\n        }],\n        destination,\n        travelMode: \"TRANSIT\"\n      },\n      callback: directionsCallback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n      directions: directions,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CustomGoogleDirections, \"WrSYei4TPrBsCcdjgt2/n+Hm8Jk=\");\n\n_c = CustomGoogleDirections;\n\nconst CustomGoogleMap = props => {\n  const {\n    startPoint,\n    wayPoints,\n    endPoint\n  } = props;\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: process.env.REACT_APP_MY_KEY,\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: {\n        height: \"400px\",\n        width: \"800px\"\n      },\n      zoom: 15,\n      center: startPoint ? startPoint : {\n        lat: 37.579779,\n        lng: 126.976955\n      },\n      children: /*#__PURE__*/_jsxDEV(CustomGoogleDirections, {\n        origin: startPoint,\n        destination: endPoint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = CustomGoogleMap;\nexport default _c3 = /*#__PURE__*/memo(CustomGoogleMap);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CustomGoogleDirections\");\n$RefreshReg$(_c2, \"CustomGoogleMap\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["D:/__Bitcamp/__crafts/02_final/project/1009~/PlanD/front-end/src/components/body/map/CustomGoogleMap.jsx"],"names":["React","memo","useEffect","useRef","useState","DirectionsRenderer","DirectionsService","GoogleMap","LoadScript","CustomGoogleDirections","startPoint","wayPoints","endPoint","directions","setDirections","count","console","log","origin","destination","options","polyLineOptions","strokeColor","strokeWeight","strokeOpacity","current","lat","lng","directionsCallback","result","status","waypoints","location","travelMode","CustomGoogleMap","props","process","env","REACT_APP_MY_KEY","height","width"],"mappings":"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","sourcesContent":["import React, { memo, useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  DirectionsRenderer,\r\n  DirectionsService,\r\n  GoogleMap,\r\n  LoadScript,\r\n} from \"@react-google-maps/api\";\r\n\r\n// props는 상위 컴포넌트에서 전달받은 내용이 될 것\r\n// const CustomGoogleDirections = (props) => {\r\nconst CustomGoogleDirections = (\r\n  startPoint = {},\r\n  wayPoints = {},\r\n  endPoint = {}\r\n) => {\r\n  const [directions, setDirections] = useState();\r\n  // const { origin, waypoints, destination } = props;\r\n  const count = useRef(0);\r\n  console.log(\"구글맵\", origin, wayPoints, destination);\r\n  const options = {\r\n    polyLineOptions: {\r\n      strokeColor: \"black\",\r\n      strokeWeight: 6,\r\n      strokeOpacity: 0.8,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    count.current = 0;\r\n    console.log(origin, wayPoints, destination);\r\n  }, [\r\n    origin?.lat,\r\n    origin?.lng,\r\n    destination?.lat,\r\n    destination?.lng,\r\n    wayPoints?.lat,\r\n    wayPoints?.lng,\r\n  ]);\r\n\r\n  const directionsCallback = (result, status) => {\r\n    console.log(result, status);\r\n    if (status === \"OK\" && count.current === 0) {\r\n      count.current += 1;\r\n      setDirections(result);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DirectionsService\r\n        // travelMode: 'TRANSIT' or 'WALKING'\r\n        options={{\r\n          origin,\r\n          waypoints: [{ location: { ...wayPoints } }],\r\n          destination,\r\n          travelMode: \"TRANSIT\",\r\n        }}\r\n        callback={directionsCallback}\r\n      />\r\n      <DirectionsRenderer directions={directions} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst CustomGoogleMap = (props) => {\r\n  const { startPoint, wayPoints, endPoint } = props;\r\n  return (\r\n    <LoadScript googleMapsApiKey={process.env.REACT_APP_MY_KEY}>\r\n      <GoogleMap\r\n        mapContainerStyle={{\r\n          height: \"400px\",\r\n          width: \"800px\",\r\n        }}\r\n        zoom={15}\r\n        center={startPoint ? startPoint : { lat: 37.579779, lng: 126.976955 }}\r\n      >\r\n        <CustomGoogleDirections origin={startPoint} destination={endPoint} />\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default memo(CustomGoogleMap);\r\n"]},"metadata":{},"sourceType":"module"}